{"_id":"use-resize-observer","_rev":"27-30527a2a46305b436e3fd08cad254bd6","name":"use-resize-observer","dist-tags":{"latest":"9.1.0","alpha":"9.1.0-alpha.1"},"versions":{"1.0.0":{"name":"use-resize-observer","version":"1.0.0","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook to use a Resize Observer","author":{"name":"Viktor Hubert","email":"rpgmorpheus@gmail.com"},"license":"MIT","scripts":{"build":"rollup -c","prepublish":"yarn build"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,md}":["prettier --write","git add"]},"dependencies":{"resize-observer":"^1.0.0-alpha.1"},"peerDependencies":{"react":"^16.7.0-alpha.0","react-dom":"^16.7.0-alpha.0"},"devDependencies":{"@babel/core":"^7.1.2","@babel/preset-env":"^7.1.0","husky":"^1.1.2","lint-staged":"^7.3.0","prettier":"^1.14.3","rollup":"^0.66.6","rollup-plugin-babel":"^4.0.3"},"gitHead":"15d9a335922825d748f4c28271a826d9189f7750","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@1.0.0","_npmVersion":"6.4.1","_nodeVersion":"10.12.0","_npmUser":{"name":"oharridge","email":"ollie.harridge@eventstag.com"},"dist":{"integrity":"sha512-DRiSxlsfYu8XmlwO5rGPIuF/ZIeUrBe3kn5I3HkHtMcQLgi3tuCpJuPM01ViEyMpIjEV8VuS48SXw02O3rpzmQ==","shasum":"80c33cf65629829d6e584b8a70583751b05ac3cb","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-1.0.0.tgz","fileCount":7,"unpackedSize":6260,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb1bB3CRA9TVsSAnZWagAAK5kQAKIpfuj+vubgtL54inIk\n35o2jdDfwiOTlW+7ToRPradM+FYwZLq7j/tyfYUKB5XVxApzsiiG+mXVCiaF\nTd6C8BEfydCJe/Is1w7GM2lV7H3seUedG5TBQsWL0Yd0T6pumirsgjC0EqJQ\ndhbTqs15RifyzdP8QYydxtdKLyXHV21C+VId4ir4AMZoZFOFQV0LduGYXBHm\nV7x5qQFnuD4v/eA1KpFhvPZHassMPXmFo0A3Syktu5Bbe93fEnfAPc+4OJ+B\nYZ8W1GyvcMlf5tHGw4vqaPOwQZHLfmvt9jHnuVhV7RKBSJE0vHcQfZTjvyhx\n2eoOqHXgPC2DoM6/C9hEAUrD6DqmRigVcS4KxtqW7iaj0ykCS1NOZr7ktawW\nRKnPXFUBUjxOg1n0mjbx+vT2DF7CLCh9UoO+LlL4g68wWs+/J3MXKCOM+Ybx\n1TmzFqGCnTXv1IOsfDQcNUprTAj5tIWyOU6JfsuLogiEBCyGVCM/+cu/BYQ2\nbZdQfrQ7LhvsF5R2Uxq6m/VIidVuCm6s/0wnSF7fJbbcnAPgbN24wsAXhCIL\n7YUtMz33ZuCupl/xhbRLnfyw86sb4Usva3SnpB6a6IK0Bs0D/z0I9enm/cWz\n1/mg9E7C5CozXpUow+W41RRxebrKiq/FJ3dBPRU+WIV+lxMj7muaXQvsPfHa\nN5kf\r\n=XPqR\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC6qbyzdmrPdgWukzlDUNcPS+2M15Ym2bSoI7lALti1eAIgQhVAUuWAlI0uUqJ3aAJutKL6AiXptVNmwibc22qEf9E="}]},"maintainers":[{"name":"oharridge","email":"ollie.harridge@eventstag.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_1.0.0_1540730998974_0.3975207302760988"},"_hasShrinkwrap":false},"2.0.0":{"name":"use-resize-observer","version":"2.0.0","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook to use a Resize Observer","author":{"name":"Viktor Hubert","email":"rpgmorpheus@gmail.com"},"license":"MIT","scripts":{"build":"rollup -c","test":"karma start","test:build":"parcel build tests/index.js --out-dir tests/dist","prepublish":"yarn build"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,md}":["prettier --write","git add"]},"dependencies":{"resize-observer-polyfill":"^1.5.0"},"peerDependencies":{"react":"16.7.0-alpha.2","react-dom":"16.7.0-alpha.2"},"devDependencies":{"@babel/core":"^7.1.2","@babel/preset-env":"^7.1.0","babel-regenerator-runtime":"^6.5.0","delay":"^4.1.0","husky":"^1.1.2","karma":"^3.1.3","karma-chrome-launcher":"^2.2.0","karma-jasmine":"^2.0.1","karma-spec-reporter":"^0.0.32","lint-staged":"^7.3.0","parcel-bundler":"^1.10.3","prettier":"^1.14.3","react":"16.7.0-alpha.2","react-dom":"16.7.0-alpha.2","rollup":"^0.66.6","rollup-plugin-babel":"^4.0.3"},"publishConfig":{"access":"public"},"gitHead":"0a50ef0529a99d53c3915cc928c7814217db4fb1","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@2.0.0","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"zeecoder","email":"rpgmorpheus@gmail.com"},"dist":{"integrity":"sha512-qjkATJnNkAbMFKI/bl1Xx2b6fAUTs4N5uXO8KzSHFanmGoaLIf4ZLfv6ArDWWgphLPsfcyMedsZByyoGAcsoIg==","shasum":"9acb09dc6481f15b0f9a4291848b9c19b9f711b2","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-2.0.0.tgz","fileCount":6,"unpackedSize":7234,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcG7UTCRA9TVsSAnZWagAARhYP/RCn6011FYiCsNyB0nsA\nO8pSS2A7zCfew0Z5wz2aSCMmoOo24aZi2w6jW0qaDc7PE+TK7pUI16/K3mu4\nEs13bT006WgIP5Q2ZsNn3bPoUbVoEMGOCTi57NFa+vaA1AhTRslWx5FC09Qx\nH9MgW2WMU8Zj+nf9SX9ThBhs5acjdCZFLABdUkp1R5B97rfJZUW5hqCm5is9\nbRWOqYPF+mp0OcoiTV739GZ8F9U9r4xEOcgGRkbWb8TCHSP14lcA4WmzkSOE\np4umXykVcGEETC2PF83b4ixoYTRIxcXbcYqcgtWetRGn17E/7l+J9Ay5sEBL\n2jAXY6B8/ALyOmH9dHCb4DIZqvh1tuKx8tzbJBsZnNdqxyppkcbfpRvWWYhR\ndg+xkaB1Jv4VG1ea4NLlyhwmTso/WIl+G+VPylKqI4kKWJrOwp5n2ASRwDg+\nMxz0RNeKytSNsTnRfJL19p3XxbN7WUxrzQb4cP3vv5s+T/5OGt3V8+TJBy7m\nNSbA8vgTUqHCDwjYBw452l2wLDnfAJqWG6ARBoEYsjV1WGNCdLyZ1hX3JLyH\nLXtx1NOzL8qsrZspTd8ZI8X5BvTyBTE/QXhcikVLtBS/zl7v0c5UNtlO3int\nnLKHagkvJgbzJ5lJl7ENIZaoorznfoyAinNUNVMV0IIr8zaUv1aZnI8PHGNo\neUVt\r\n=yWAk\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDUjqYdQLHpcpgK6kQBBrUspuwC+Zxnqn6bE5L9j3HpFQIhAIpQiW4VKVsq86DE5htsiI6Mak12iNzqu1d2a1w4OXY3"}]},"maintainers":[{"email":"rpgmorpheus@gmail.com","name":"zeecoder"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_2.0.0_1545319699269_0.2951252003125049"},"_hasShrinkwrap":false},"2.0.1":{"name":"use-resize-observer","version":"2.0.1","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook to use a Resize Observer","author":{"name":"Viktor Hubert","email":"rpgmorpheus@gmail.com"},"license":"MIT","scripts":{"build":"rollup -c","test":"karma start","test:build":"parcel build tests/index.js --out-dir tests/dist","prepublish":"yarn build"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,md}":["prettier --write","git add"]},"dependencies":{"resize-observer-polyfill":"^1.5.0"},"peerDependencies":{"react":"16.7.0-alpha.2","react-dom":"16.7.0-alpha.2"},"devDependencies":{"@babel/core":"^7.1.2","@babel/preset-env":"^7.1.0","babel-regenerator-runtime":"^6.5.0","delay":"^4.1.0","husky":"^1.1.2","karma":"^3.1.3","karma-chrome-launcher":"^2.2.0","karma-jasmine":"^2.0.1","karma-spec-reporter":"^0.0.32","lint-staged":"^7.3.0","parcel-bundler":"^1.10.3","prettier":"^1.14.3","react":"16.7.0-alpha.2","react-dom":"16.7.0-alpha.2","rollup":"^0.66.6","rollup-plugin-babel":"^4.0.3"},"publishConfig":{"access":"public"},"gitHead":"19706639f0189a5fb56975c3eda0eeba6191418e","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@2.0.1","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"zeecoder","email":"rpgmorpheus@gmail.com"},"dist":{"integrity":"sha512-yfvqVdGDrdIB/lPnkeH2GLhlqKNLmogb1G8paUc9ST6O8yfjvEEfowrZWrU/Zt/hnwFiAREJgmIwmqUOfifCKA==","shasum":"51c4c3fa98f54016fb9dd71fd891a4e33ed7ab7f","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-2.0.1.tgz","fileCount":6,"unpackedSize":7302,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcG7ZkCRA9TVsSAnZWagAAbTEP/RueSO1MjhNA8oPzglcU\n6E+8/ji2XShMzXqUNkPfCKv2oxRQ4RIryrlZe55EobBtW9j/ZUEFVMkHwF66\nH1S4bpECnM6/obwCKyk7IWLKF2h8/Ux00brkso2UNYGJF0D1Iluu2p42+Jy7\njM+uvQegVaXrBwmuY0Ghhuble4v0KT3ztn71hiMhWdel80klTvqUQrR/3ejK\nVhFgOvfYOxrreVOUxnYtAv7FaXKMfBzIAhmnRb1+TAOx6HnSMUA005GaJbbL\nWowl+C3xPCRAYI2+QvP6OYswfZv4z9KysuhCNPPoXK4URmgxlO3JcOs6+rO8\nm8RumQ/HoQFah6QtPDMouyRclhAR4wBn60p8Xwsyj6XTss5vDrG7ZTVkJDFq\njfFJ2q7xT/UagNFoEYoJqBCHzC9BSlYKaKQMT3YWxdc4qOotSj3tcDAsKPR2\nu9hJJKjTGcBKhA4UeDpVxizqziaSOh3pvDZZU95yUghdh9z7D2+xZiAEAErJ\nuG8CtocVUeruPmJW02mwhcvxzIMMwWzyYGeQluaUFFY6XnY7xGNQWO9oVNfM\nItptAnBkEQOf4L4skaQivtTad26FE7PbmYJtgmeX2mZDAkeyd4yrD2memZZE\nIK/5n9ga5UxvvIHKIRE38wIlLRnY2Quasi1qhDcH9w3nffhFYtTHsnjYtpW+\nNN6J\r\n=AnZl\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDKsZb0tdMF1hPDowB0dVgnaNzD+RzuGWJ7VbTmkHYScAiAqHPq820bEHgWbE+VMxmjkYBw3MRvgF4tNFrV70hgKzw=="}]},"maintainers":[{"email":"rpgmorpheus@gmail.com","name":"zeecoder"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_2.0.1_1545320036002_0.4549454610288668"},"_hasShrinkwrap":false},"3.0.0":{"name":"use-resize-observer","version":"3.0.0","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"rpgmorpheus@gmail.com"},"license":"MIT","scripts":{"build":"rollup -c","test":"karma start","test:build":"parcel build tests/index.js --out-dir tests/dist","prepublish":"yarn build"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,md}":["prettier --write","git add"]},"dependencies":{"resize-observer-polyfill":"^1.5.0"},"peerDependencies":{"react":">=16.8.0","react-dom":">=16.8.0"},"devDependencies":{"@babel/core":"^7.1.2","@babel/preset-env":"^7.1.0","babel-regenerator-runtime":"^6.5.0","delay":"^4.1.0","husky":"^1.1.2","karma":"^3.1.3","karma-chrome-launcher":"^2.2.0","karma-jasmine":"^2.0.1","karma-spec-reporter":"^0.0.32","lint-staged":"^7.3.0","parcel-bundler":"^1.10.3","prettier":"^1.14.3","react":"^16.8.1","react-dom":"^16.8.1","rollup":"^0.66.6","rollup-plugin-babel":"^4.0.3"},"gitHead":"6c5425c604362b9c19b6248db0773fa7d2b01921","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@3.0.0","_npmVersion":"6.4.1","_nodeVersion":"10.15.1","_npmUser":{"name":"zeecoder","email":"rpgmorpheus@gmail.com"},"dist":{"integrity":"sha512-0C2C75A+XOORBwwjfik41+Y6uNGCOEwPEeOWoT2dq4Sk+Z3+L6Phrz+u04asUSunf/32B2j9fwn9PmXB2BNPOQ==","shasum":"72891f0033ef243d28237a079ea83f362d9a028b","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-3.0.0.tgz","fileCount":6,"unpackedSize":7849,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcXG7+CRA9TVsSAnZWagAA1zQP/2kYoA5JMWt6+2ybLjSA\nmizFYdz2Rz12rFrnGNY3KG4S42x+4JknujKuBqA9DsMziPU0bXZYouXD+x5j\nT+4OdS31g1g0u10sY130L56otVHGWr61BIqW+BcTE/QRZ+UPQqc9VMII8Srs\naz3QpJe7H1eqVbNUQpMDRQPh1ktNEo/bKyOuJeICeCaIAhVNCSfAqQaP22P+\nMXtsmmhoLZHDXCkBY8mNjDKCdGqtqeA2LJ/fl0SSNsaaH+c0w9dCKgoEjEdv\nJSWbIJ3n4/VPdVNVZVVU46irObXpalQpg8rdFjc8j61LKgtEGyrq4uBeXDAV\nxM+Mo/Vy7yPNxM/n7dX/gtKfm/QWjNd2bFxW6aA7KwiY/32kcAX9EduNyPXx\ntbzu63jWoYSSnICZpGDMmC6iv58+iSEsqkyK5cvkMDozj6iiPngQECg5nVuJ\nmmYtrFg6+JmkF77BplyT2FBaCgG+8epg2vQlYBio/MLNTY0nlxzhwlVi14S8\np0SNG/9bmk1omog/kkKsOvogf6PZgp8xSFBmtFMuJVz09zuMDgqCyv3yGOf1\nD9TDkSIHdb5sjDaYfF+nJ+aKKRhtVg3bqWrvFKEPYb2GtTbCbtQDchSwQafB\n0cjPRIuVtVJgxbCGXfROWpysipDzNnU4J4rtdHSjH38fLQOLqvA4gs06U+OE\nh8ju\r\n=AX+c\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAbrN+d00R5wokb+wt9x8Y5u3myJbTnJAOAEEl6Sg1qOAiBk6cVvutOH3cqXvTjw40JZn1rc92hT7fKo6G9HUvKg4g=="}]},"maintainers":[{"email":"rpgmorpheus@gmail.com","name":"zeecoder"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_3.0.0_1549561598166_0.06523655347693658"},"_hasShrinkwrap":false},"3.1.0":{"name":"use-resize-observer","version":"3.1.0","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"rpgmorpheus@gmail.com"},"license":"MIT","scripts":{"build":"rollup -c","test":"karma start","test:build":"parcel build tests/index.js --out-dir tests/dist","prepublish":"yarn build"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,md}":["prettier --write","git add"]},"dependencies":{"resize-observer-polyfill":"^1.5.0"},"peerDependencies":{"react":">=16.8.0","react-dom":">=16.8.0"},"devDependencies":{"@babel/core":"^7.1.2","@babel/preset-env":"^7.1.0","babel-regenerator-runtime":"^6.5.0","delay":"^4.1.0","husky":"^1.1.2","karma":"^3.1.3","karma-chrome-launcher":"^2.2.0","karma-jasmine":"^2.0.1","karma-spec-reporter":"^0.0.32","lint-staged":"^7.3.0","parcel-bundler":"^1.10.3","prettier":"^1.14.3","react":"^16.8.1","react-dom":"^16.8.1","rollup":"^0.66.6","rollup-plugin-babel":"^4.0.3"},"types":"index.d.ts","gitHead":"e2e1432ef205917281ab0dab89bd143312a8eec4","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@3.1.0","_npmVersion":"6.4.1","_nodeVersion":"10.15.1","_npmUser":{"name":"zeecoder","email":"rpgmorpheus@gmail.com"},"dist":{"integrity":"sha512-g9eIqzZUtxW6/S0+fe79ZuDeYxk7c9R3iArv3YOkkgY7IfJHJxIXglVhmxKRovprcEqfZ+6yq30MbQ5WjdhXQw==","shasum":"138406ca9d34f3f2be95ab8b5829734a927cc2a7","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-3.1.0.tgz","fileCount":7,"unpackedSize":8190,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcYWo7CRA9TVsSAnZWagAAVC0QAIp3vEHdPVGDhcKBP5dX\nJOUit9No5OX8v9m/yRGlJOTHlgA6wMmxv/p/UYJLk2nMtIPVtIdqxtBohVMc\nZKGEGL6CmXLkW/0HckybeVD8acEC7f8LZUU55prRw9ixYFf0PZo2UlOmkIP/\nm6evssCIy6qDej9kTOpY29KHD8YkBFXdfKlBD9KGgS9JmdeH3RGxTA3qPZmh\nJ9N9ONSogNYO5T0BdKw3J1GDq3mF38W+IfcIL3JPXEA6/MtigYS1RYFAC/9S\ndIlzLbA+nrg0L3nMySgYQGLzq7A5KXq7LCsrPVS4vnjlRii/Fek6xDkUrt/3\nzI4CTJF58Cvg6PTycBkwvDZSuvwrWd4zo3H3hF3g5nZnuNaHQOdW6DawTePa\nle7xyUC3B8fG/rkFm2AJv/7fQIMaodOShQ5+Zf2Rom+FqA5V1GYULAM+w/QR\nptMlEHRwy/1oTDyqtVcRddFQsKImAtj1tPLO7taw0fchGneLME64pB1PyZfY\nPdilbIdO0Kr106RO48ZQmv0jeW99d+4Jep2FrSsGBp3OgVkBYk4+kr+WqTDU\nzZzUumMSggjx5eBD0DBAZOqw7vcBQKGezoNbeyjGXmfItE5Hq3b9lOBT/u4O\njkY7ZyRP8SYBZr6nZqw3IEBqgTeLe16YeyjE86+ta8Vyr71caHYGLpOcsVGT\nVAmp\r\n=cyCv\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAWqJToWBs7n6YGzcYvw7IVFHf4Z8qf07OabKb3wbJ+BAiEAv1BTuhuCWK1ezYlXKk+0KHVpPaYnzZTQ+HYGNVqWQh0="}]},"maintainers":[{"email":"rpgmorpheus@gmail.com","name":"zeecoder"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_3.1.0_1549888058755_0.22396332140697095"},"_hasShrinkwrap":false},"4.0.0":{"name":"use-resize-observer","version":"4.0.0","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"rpgmorpheus@gmail.com"},"license":"MIT","scripts":{"build":"rollup -c","watch":"rollup -c -w","test":"karma start","test:build":"parcel build tests/index.js --out-dir tests/dist","test:watch":"parcel watch tests/index.js --out-dir tests/dist","prepublish":"yarn build"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,md}":["prettier --write","git add"]},"dependencies":{"resize-observer-polyfill":"^1.5.0"},"peerDependencies":{"react":">=16.8.0","react-dom":">=16.8.0"},"devDependencies":{"@babel/core":"^7.1.2","@babel/preset-env":"^7.1.0","babel-regenerator-runtime":"^6.5.0","delay":"^4.1.0","husky":"^3.0.1","karma":"^4.2.0","karma-chrome-launcher":"^3.0.0","karma-jasmine":"^2.0.1","karma-spec-reporter":"^0.0.32","lint-staged":"^9.2.0","parcel-bundler":"^1.10.3","prettier":"^1.14.3","react":"^16.8.1","react-dom":"^16.8.1","rollup":"^1.17.0","rollup-plugin-babel":"^4.0.3"},"gitHead":"f5e22a5a6e642583202a039d36501d8b78c4fc14","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@4.0.0","_nodeVersion":"10.16.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-q97g2NISwPZ7a1Y2cbcoVePPaq7HuBu44rkWpzKZNmY8bV69MydaFLNsOSBOu7Jk7mdjiRL4C0/rAks8goLdhQ==","shasum":"9976763c37658e84d6e4f1172e7c146816907ece","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-4.0.0.tgz","fileCount":6,"unpackedSize":9525,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdM3ViCRA9TVsSAnZWagAAAo8P/1Atzx52wlbZRWxfs9rM\ntAgUp7iCidAFpQzM0lDFmBIOMsotexoumdchtTasefCOV9P1tpAiVMB34iZv\n5vM6h34dhWN+lJz9Z97MT54d4wrnP5G8m8+7XXf7deMbM4ZChowVaWEYB9t+\nbjW+DA67HHks3NWhHt0eXIfe4daTkuS9aFZ7+u7lPY09ye6qtOnE83jLBi/x\nKdpSmIYEGDIrSeWY7FJtglpI9XP5iN/KU5WEd56Sj8qa4kHYvCMDVTzZsY+T\nsAiZ70q7BXUp6sO1ifehlgJibsP7bAQ0vzzXrv6AyfJtw3OygdlpU+DWR8TH\nfQNw6sFhCGIFQosezYZDv6Savtf6ss6aNNHZsXhomSMyLd1S9IFblFYU1som\niYgjqCtLpLe5sZCiu3MXIWE/wJStHSrExfJshMHuMFSUzutawGFEw0r+UEir\nUEBrYjGukE20W6EvEKqPnUHkaSiyzTdoyJ/sRzhKBy+kvG/JbpGWodffN/kr\na/099/OUb1+OyI48I907ji1bqmbChkusZjk21WDAsNQ5TcUzE7Q8n5fYnWiq\nD/mdHlB5x4AeAHmImeGfx1b/SEQ8Q51Nt2eVWjvz2iSCVUdfRNr7+ICOT8tI\nNxnpB+jCqy+kKgWjI4e7E1iUPnikp4mvCYBuUk3GD1a+t5dmjbT2WGSDr9P5\nvaKz\r\n=buaj\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIF5/trCccqz1lA5dLDkEFBujhoZZmz9qpdAclH+2xCFDAiEAxHgTai3AMflXNPWPORcVP16EGMnxkjRsNAQgolEFm/Q="}]},"maintainers":[{"email":"rpgmorpheus@gmail.com","name":"zeecoder"}],"_npmUser":{"name":"zeecoder","email":"rpgmorpheus@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_4.0.0_1563653473752_0.2895380638566074"},"_hasShrinkwrap":false},"5.0.0":{"name":"use-resize-observer","version":"5.0.0","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","sideEffects":false,"repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"rpgmorpheus@gmail.com"},"license":"MIT","scripts":{"build":"run-s src:build test:build","watch":"KARMA_BROWSERS=Chrome run-p src:watch test:watch karma:watch","src:build":"rollup -c","src:watch":"rollup -c -w","test":"run-s build karma:run","test:build":"parcel build tests/index.js --out-dir tests/dist","test:watch":"parcel watch tests/index.js --out-dir tests/dist","test:chrome":"KARMA_BROWSERS=Chrome yarn karma:run","test:chrome:headless":"KARMA_BROWSERS=ChromeHeadless yarn karma:run","test:firefox":"KARMA_BROWSERS=Firefox yarn karma:run","test:firefox:headless":"KARMA_BROWSERS=FirefoxHeadless yarn karma:run","karma:run":"karma start --singleRun","karma:watch":"karma start","prepublish":"yarn src:build"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,md}":["prettier --write","git add"]},"peerDependencies":{"react":">=16.8.0","react-dom":">=16.8.0"},"devDependencies":{"@babel/core":"^7.1.2","@babel/preset-env":"^7.5.5","babel-regenerator-runtime":"^6.5.0","delay":"^4.1.0","husky":"^3.0.4","karma":"^4.2.0","karma-chrome-launcher":"^3.0.0","karma-firefox-launcher":"^1.2.0","karma-jasmine":"^2.0.1","karma-spec-reporter":"^0.0.32","lint-staged":"^9.2.3","npm-run-all":"^4.1.5","parcel-bundler":"^1.10.3","prettier":"^1.14.3","react":"^16.9.0","react-dom":"^16.9.0","rollup":"^1.20.1","rollup-plugin-babel":"^4.3.3","rollup-plugin-inject":"^3.0.2"},"dependencies":{"resize-observer-polyfill":"^1.5.1"},"gitHead":"4dca009d85ee94d97642323569b5508c27e65248","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@5.0.0","_nodeVersion":"10.17.0","_npmVersion":"6.11.3","dist":{"integrity":"sha512-mQGibkHUeXW6iAog7wCv5UduAxWA8CTmhu54Z3s5IMPafvYhFJDRUzj36/9JrybFJ86HeIPZsV58ZhSghQJF/Q==","shasum":"2c1a1643bf0891ca094163c60ad0b08948540ec3","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-5.0.0.tgz","fileCount":7,"unpackedSize":16927,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd0xcvCRA9TVsSAnZWagAAV5gP/je0MLAgdq4uYkxFMu+S\ncEX8GdWx93xcusWVlMANLGgQwqM5v3A7gTUq1BadyClgd/FfqTkWbmV9y1oY\nmPBfeLOlVI+EAIzSJi5mqN8Sz4IwiTU17RXRsqWcN+Vbdwb4Mi9V4zMqJL/n\nHR/ivLcbcgbDoi7Q3tXZFPvPLEco33eumy64EN2kpmYHfACGYBJ1rRf7wyd4\nASR1e98h/8tuwLPpYOBRxjczoy7CwsZspEHuvK4SyiyoPh8HsXU3oiCCW/p9\nwUJkwfDTIaYNGp0IXyjZiX1woW27H4p/V8wkCit4Utjb4I18W4MuqgBm96nR\nJQdjWWZ0xWlMggDCza9iB/ort7dDD3sssGf3Pr3QnQ9D4JL6eAVU6wZUCawp\nr/j9Vmjno50iVYW1ubmobGDpG8Mw3iVngZEG201F3w7LUYX6hRQzO9HyjcDq\nWitt9BAWxaLc8MeJ8jawxt9YCP/fKb6uySywc6LLmS+3xJ3G/B3QcUNkdHh6\n1wlwlRqMFwDB43h5cHR33v4su/Et1PbcUkyP5P7AdLbia/HPjdBOyd+5Jc8j\n++CTJFYXasUNlTgx0/UsmeKaEclSoLZ519/ejaw4C7fqBfWCw/gcaRu/oyKM\nSnev2xUsIPcNrS4tf1W1d72w98TeWqBFM9eC6pgGEzxao4f26vpYlrFb3MKH\n5CjI\r\n=1YGY\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDFLJHM7riOeZt0WkFUfWPYGqXVGgCEihXfZy9kiuzmpgIhAJO5tqo5e8k1Xu9TdNaHavqObyZYaTFSo1Zs32oO//RP"}]},"maintainers":[{"email":"rpgmorpheus@gmail.com","name":"zeecoder"}],"_npmUser":{"name":"zeecoder","email":"rpgmorpheus@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_5.0.0_1574115118624_0.3024524985486057"},"_hasShrinkwrap":false},"6.0.0":{"name":"use-resize-observer","version":"6.0.0","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","sideEffects":false,"repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"rpgmorpheus@gmail.com"},"license":"MIT","scripts":{"build":"run-s src:build test:build","watch":"KARMA_BROWSERS=Chrome run-p src:watch test:watch karma:watch","src:build":"rollup -c","src:watch":"rollup -c -w","test":"run-s build karma:run","test:build":"parcel build tests/index.js --out-dir tests/dist","test:watch":"parcel watch tests/index.js --out-dir tests/dist","test:chrome":"KARMA_BROWSERS=Chrome yarn karma:run","test:chrome:headless":"KARMA_BROWSERS=ChromeHeadless yarn karma:run","test:firefox":"KARMA_BROWSERS=Firefox yarn karma:run","test:firefox:headless":"KARMA_BROWSERS=FirefoxHeadless yarn karma:run","karma:run":"karma start --singleRun","karma:watch":"karma start","prepublish":"yarn src:build"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,md}":["prettier --write","git add"]},"peerDependencies":{"react":">=16.8.0","react-dom":">=16.8.0"},"devDependencies":{"@babel/core":"^7.7.7","@babel/preset-env":"^7.7.7","babel-regenerator-runtime":"^6.5.0","delay":"^4.1.0","husky":"^3.0.4","karma":"^4.2.0","karma-chrome-launcher":"^3.0.0","karma-firefox-launcher":"^1.2.0","karma-jasmine":"^2.0.1","karma-spec-reporter":"^0.0.32","lint-staged":"^9.5.0","npm-run-all":"^4.1.5","parcel-bundler":"^1.10.3","prettier":"^1.14.3","react":"^16.9.0","react-dom":"^16.9.0","rollup":"^1.27.14","rollup-plugin-babel":"^4.3.3","rollup-plugin-inject":"^3.0.2"},"dependencies":{"resize-observer-polyfill":"^1.5.1"},"gitHead":"ded5a3bb661799854f80a98b7202b31f164a44d4","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@6.0.0","_nodeVersion":"10.18.0","_npmVersion":"6.13.4","dist":{"integrity":"sha512-Zfe1qsZVhzfgECs+L/ZcSukyVPFGOmWtC7xZI5Lpn4PR2hNgVvD1NmQ/GYBoCSV2pJskxflJWcDzpTAt84nhvw==","shasum":"8450ade735c386e8d93cdf983c26d34a9f478a54","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-6.0.0.tgz","fileCount":7,"unpackedSize":16697,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeCOQzCRA9TVsSAnZWagAA/+EP/0DaqQPi7KScwQfRB7nt\nmD0y3qsIAMiSSKyZ4DbWTaMHi0LDH6CQEE5LcbMO9oyqjGN4LujFAoK7lYxU\neCew0vPV0lSpc3RDe4MvF8i3/byhoptfhzy0RDoV/D0bVrNr1mQCT6NXq5Ja\nVGzdePiuO7dvypXMb+mkP/LqeeQVaF5tZCk6PHICGy/b+1hpbKuZaYNcrQL9\n8As/Km8M5ms3LxMhMbwQR1eElHLnJ5ebPNrlvvlsnePR27JbRSJFgA6MISxS\nZ1gPtqEYK9LFgsNHrkK04tSzXmv9CuTA1TBan3Tfc9/GdraAxMgoCoAZ9Slh\nWBYNYd/xgSOku8OHg5bUm7I0G6EmmTdAPWIk/R/H04zpfPF+9Pv2RnfghnHG\nGVPqCvX36cpiKzCHCB7/P9hipnwwmcDgCg9bG+hGLP7jGzhM0VX76kABZlK6\nXH64kf2aP6KFva2Il8xwC0o30q/YrRK1PeukFdW62CF+Zo49U+wHytx0FgvV\nvEaBdCHIKUyE4RGZNeAGQVSJ/wSUeRhQe72rDzYjaIl6YvqyazWS2JUTW0ue\nHCMRcg2QF/Xu+WxIxW+H6Za2eyIyDQi3BMHlrnt16fPV9Mv5aOPctf+LD5cU\n4T9Pr2ERKV7uvVcI+Srz0MRrhhtjzvbLlHdfuhBNcVKOmqrwGaVhTwsMGBK5\nK9w/\r\n=bi7S\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCID1UzpAf2zFSFizWEblZH95ME20EoreHpNZEYmWnp01dAiBrXQEs+tQx+3+GIbCM8vSHyRoBBcnM9tPCNysmHbg8nQ=="}]},"maintainers":[{"email":"rpgmorpheus@gmail.com","name":"zeecoder"}],"_npmUser":{"name":"zeecoder","email":"rpgmorpheus@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_6.0.0_1577641011205_0.5891984718551169"},"_hasShrinkwrap":false},"6.1.0-alpha.1":{"name":"use-resize-observer","version":"6.1.0-alpha.1","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","types":"dist/index.d.ts","sideEffects":false,"repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"contact@hubertviktor.com"},"license":"MIT","scripts":{"build":"run-s src:build test:build","watch":"KARMA_BROWSERS=Chrome run-p src:watch test:watch karma:watch","src:build":"rollup -c && tsc && cp dist/index.d.ts polyfilled.d.ts","src:watch":"rollup -c -w","tsc":"tsc","size-limit":"size-limit","test":"run-s 'build' 'size-limit' 'tsc -p tests' 'test:chrome:headless' 'test:firefox:headless'","test:build":"parcel build tests/index.tsx --out-dir tests/dist","test:watch":"parcel watch tests/index.ts --out-dir tests/dist","test:chrome":"KARMA_BROWSERS=Chrome yarn karma:run","test:chrome:headless":"KARMA_BROWSERS=ChromeHeadless yarn karma:run","test:firefox":"KARMA_BROWSERS=Firefox yarn karma:run","test:firefox:headless":"KARMA_BROWSERS=FirefoxHeadless yarn karma:run","karma:run":"karma start --singleRun","karma:watch":"karma start","prepublish":"yarn src:build"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,ts,md}":["prettier --write"]},"peerDependencies":{"react":">=16.8.0","react-dom":">=16.8.0"},"devDependencies":{"@babel/core":"^7.7.7","@babel/preset-env":"^7.7.7","@babel/preset-typescript":"^7.9.0","@rollup/plugin-inject":"^4.0.1","@size-limit/preset-small-lib":"^4.4.5","@types/karma":"^5.0.0","@types/karma-jasmine":"^3.1.0","@types/react":"^16.9.34","@types/react-dom":"^16.9.6","babel-regenerator-runtime":"^6.5.0","delay":"^4.1.0","husky":"^4.2.5","karma":"^5.0.1","karma-chrome-launcher":"^3.0.0","karma-firefox-launcher":"^1.3.0","karma-jasmine":"^3.1.1","karma-spec-reporter":"^0.0.32","lint-staged":"^10.1.3","npm-run-all":"^4.1.5","parcel-bundler":"^1.10.3","prettier":"^2.0.4","react":"^16.9.0","react-dom":"^16.9.0","rollup":"^2.6.1","rollup-plugin-babel":"^4.4.0","size-limit":"^4.4.5","typescript":"^3.8.3"},"dependencies":{"resize-observer-polyfill":"^1.5.1"},"gitHead":"529269c93576ba12e2376c4f3aa53cd195640b58","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@6.1.0-alpha.1","_npmVersion":"6.5.0","_nodeVersion":"11.7.0","_npmUser":{"name":"zeecoder","email":"rpgmorpheus@gmail.com"},"dist":{"integrity":"sha512-wu44tDFT3bSIXkf0XeHYLlUP4FmbIRm6tN9OiC0t/dv/lAtbYsvyJhMmv/fOJGOi0T7QAI44504ckW98SGPbGA==","shasum":"2146bd87a5b763087f62d3b9dd0fa30de92edc13","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-6.1.0-alpha.1.tgz","fileCount":10,"unpackedSize":19209,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJemHQdCRA9TVsSAnZWagAAmKwQAJ8vtrL5eJdxLdT2uQXx\nXKQAvd76tfo9MnVyqbALq551Q9pclS7SKTuI0akehZF5thM03ExaYcW2NdSt\nsXGekHYZi2mMbSiGmjWokPXi0F3+XftaeKoAgfbcH2gq5bI0lUQEau/VIBbh\n/B1mgt+FvXWZJx4366/Xt6fpxZB9AWZxkczguzyh8sSUT90sRfv/v5EOio96\nJab/HWHIxzIwqK1MUZ6O3K5VPhHv+tZ3e1ZRW+ZKjfUfn00lMZuvYWlFg3FL\nZDvJSDfTuMOq6Y3loqWKWqE9h0KLhnZ3J1Q30gpfHdGBr1xfy9QQOlsCWl9J\nXYef0xlUZhEMFJhSawnH3MLAb2TdG/Cjy9MwUKzEVozcjnVRTaVTgaQ7ofJS\nl2TcE449pdcNoy/BHO3ha0EYq7Z033slhP9FvElN+vjbkvubJrUU4GQ1Xtrk\nvUCpa8//jskrfKx2vhZr1I0okiDQ6x+T2sGeJZZxz+HQeBLCHGtgqKuDrp4y\nX/YwesITTBeDupw/3EaCQ46TzU/vsJASmEBX1kMaKIkacPSU8TLL2J84n4ok\nZS4+toUiiubJS0GdEs6AmcySHogf1961nOiHWyJezrhFs6BRzoGMgUc2tnWi\nwmziVLw+UJLDCW2NuwF7I5Bl15rYUhF0PA4+rZJFq6rDkJzbhiPjtijiMTXb\nMg7g\r\n=TLH+\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDaFHuCg8l45WnKG4bZxAikDuPwGxFtikIzRSqHK2agXAiAM5tBoJ8AXvZ2z4S8Sog6lve/gdOoSUWc/kqvPNaiEUw=="}]},"maintainers":[{"email":"rpgmorpheus@gmail.com","name":"zeecoder"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_6.1.0-alpha.1_1587049500576_0.2508540055133315"},"_hasShrinkwrap":false},"6.1.0-alpha.2":{"name":"use-resize-observer","version":"6.1.0-alpha.2","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","types":"dist/index.d.ts","sideEffects":false,"repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"contact@hubertviktor.com"},"license":"MIT","scripts":{"build":"rollup -c && tsc && cp dist/index.d.ts polyfilled.d.ts","watch":"KARMA_BROWSERS=Chrome run-p 'src:watch' 'karma:watch'","src:watch":"rollup -c -w","check:size":"size-limit","check:tests":"tsc -p tests","test":"run-s 'build' 'check:size' 'check:tests' 'test:headless:*'","test:chrome":"KARMA_BROWSERS=Chrome yarn karma:run","test:headless:chrome":"KARMA_BROWSERS=ChromeHeadless yarn karma:run","test:firefox":"KARMA_BROWSERS=Firefox yarn karma:run","test:headless:firefox":"KARMA_BROWSERS=FirefoxHeadless yarn karma:run","karma:run":"karma start --singleRun","karma:watch":"karma start","prepublish":"yarn build"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,ts,md}":["prettier --write"]},"peerDependencies":{"react":">=16.8.0","react-dom":">=16.8.0"},"devDependencies":{"@babel/core":"^7.7.7","@babel/plugin-transform-runtime":"^7.9.0","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.9.4","@babel/preset-typescript":"^7.9.0","@rollup/plugin-inject":"^4.0.1","@size-limit/preset-small-lib":"^4.4.5","@testing-library/react":"^10.0.2","@types/karma":"^5.0.0","@types/karma-jasmine":"^3.1.0","@types/react":"^16.9.34","@types/react-dom":"^16.9.6","babel-loader":"^8.1.0","delay":"^4.1.0","husky":"^4.2.5","karma":"^5.0.1","karma-chrome-launcher":"^3.0.0","karma-firefox-launcher":"^1.3.0","karma-jasmine":"^3.1.1","karma-sourcemap-loader":"^0.3.7","karma-spec-reporter":"^0.0.32","karma-webpack":"^4.0.2","lint-staged":"^10.1.3","npm-run-all":"^4.1.5","prettier":"^2.0.4","react":"^16.9.0","react-dom":"^16.9.0","rollup":"^2.6.1","rollup-plugin-babel":"^4.4.0","size-limit":"^4.4.5","typescript":"^3.8.3"},"dependencies":{"resize-observer-polyfill":"^1.5.1"},"gitHead":"c28bab46deec5c29bc3262e527261561106b4d00","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@6.1.0-alpha.2","_npmVersion":"6.5.0","_nodeVersion":"11.7.0","_npmUser":{"name":"zeecoder","email":"contact@hubertviktor.com"},"dist":{"integrity":"sha512-pSwpnoJjJC2AizWai1QPVyq0DhpGd5TKrvePqhpBH+e+scWBVVqzcWSMW7K4EY/mS4iw9ZfFoESiddFg4UX4bQ==","shasum":"8a165b21c4b5e775f6b454a35df2dfe13cec8c1f","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-6.1.0-alpha.2.tgz","fileCount":10,"unpackedSize":20823,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeneuDCRA9TVsSAnZWagAAfNkP/i79jX+ItJnJeBK8vx+u\nIbc3jxI8Kf4BamQpxRiR1nvN+2N8+aB1n5Drzo8DXmg7ulYkohlmePUMu6s3\nmowo+szWvDNLkcJrdrFjyje4uW5o9+mt3+CXyhxLYcxF7Y6kmb2/4c7fUHrJ\nrUvMeAAt26LfDzeRhrZp5yBxz2cc81FemTzD2LAV7SXRl3Gu+yrh+ckPFsB+\nPugok9yIu9ofEBHgiXtjfPcJYUs5u57emJmjNLEI+e4j95dXjfkZ1kaLjPLu\nIssg/S1D3keuxxPWUi8plbE3kV65p7I5rgRyXXVUTC/UkXnctoHW+XyLQaUa\nAG87esqZdwCDmO9mN7o2J04XIi0VX1wmRFHdhhl3SUP3GRidbgBzSfoQTWG6\n5I+5+iiq+eSP3oUAYWJfJOgsKpyTzoOe2f13suqHwiCMz6Ewe0Vi8kWwTDF7\nn6TE95iMv6Fz8Le5x0j3SPxXTeTg/9eJjmG4OqhDPxCC4cy9vh2IUrrgX/rD\n0nrV6uth16bP+1CGOw4zjuPylT4Q/gAa1jIPxMYh9xNd71ubVgUp5fIaNGGg\nXQLKtE2897EL4cPviXHiZwCZCMNrnBk/unfaKAXqTEL1rQXdAPJgV6d+W4jO\ncJplOU5y4WcDyQQ9cnnq237BQQ4aAF5Wj/dTvn6SdK8PUIdD1oNPCV1zPerb\nyMfj\r\n=eEGe\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC6Jq4mf5blMUwUbhreNGAIOtmXMOuoWCwcZEVtakoxqgIhAKSbahKWWHYqFmtxcEAaLl8ZahifFI4tc72x7hcVjg1Z"}]},"maintainers":[{"email":"rpgmorpheus@gmail.com","name":"zeecoder"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_6.1.0-alpha.2_1587407738446_0.8796079670220582"},"_hasShrinkwrap":false},"6.1.0-alpha.3":{"name":"use-resize-observer","version":"6.1.0-alpha.3","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","types":"dist/index.d.ts","sideEffects":false,"repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"contact@hubertviktor.com"},"license":"MIT","scripts":{"build":"rollup -c && tsc && cp dist/index.d.ts polyfilled.d.ts","watch":"KARMA_BROWSERS=Chrome run-p 'src:watch' 'karma:watch'","src:watch":"rollup -c -w","check:size":"size-limit","check:types":"tsc -p tests","test":"run-s 'build' 'check:size' 'check:types' 'test:create:ssr' 'test:headless:*'","test:create:ssr":"node ./tests/ssr/create-ssr-test.js","test:chrome":"KARMA_BROWSERS=Chrome yarn karma:run","test:headless:chrome":"KARMA_BROWSERS=ChromeHeadless yarn karma:run","test:firefox":"KARMA_BROWSERS=Firefox yarn karma:run","test:headless:firefox":"KARMA_BROWSERS=FirefoxHeadless yarn karma:run","karma:run":"karma start --singleRun","karma:watch":"karma start","prepublish":"yarn build"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,ts,md}":["prettier --write"]},"peerDependencies":{"react":">=16.8.0","react-dom":">=16.8.0"},"devDependencies":{"@babel/core":"^7.7.7","@babel/plugin-transform-runtime":"^7.9.0","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.9.4","@babel/preset-typescript":"^7.9.0","@rollup/plugin-inject":"^4.0.1","@size-limit/preset-small-lib":"^4.4.5","@testing-library/react":"^10.0.2","@types/karma":"^5.0.0","@types/karma-jasmine":"^3.1.0","@types/react":"^16.9.34","@types/react-dom":"^16.9.6","babel-loader":"^8.1.0","delay":"^4.1.0","husky":"^4.2.5","karma":"^5.0.1","karma-chrome-launcher":"^3.0.0","karma-firefox-launcher":"^1.3.0","karma-jasmine":"^3.1.1","karma-sourcemap-loader":"^0.3.7","karma-spec-reporter":"^0.0.32","karma-webpack":"^4.0.2","lint-staged":"^10.1.3","npm-run-all":"^4.1.5","prettier":"^2.0.4","react":"^16.9.0","react-dom":"^16.9.0","rollup":"^2.6.1","rollup-plugin-babel":"^4.4.0","size-limit":"^4.4.5","typescript":"^3.8.3"},"dependencies":{"resize-observer-polyfill":"^1.5.1"},"gitHead":"2ebc8fc0a87a13c6a7dcef5a1f29e13c83f466bd","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@6.1.0-alpha.3","_npmVersion":"6.5.0","_nodeVersion":"11.7.0","_npmUser":{"name":"zeecoder","email":"contact@hubertviktor.com"},"dist":{"integrity":"sha512-7Z/vpGIIyOTXP2PMGvTjLAjWQ+6FTt+fA6Ke+9mOJD9L40HEcb/K6PTtYNXaMmzq2yiU5Bv255YwGSjMRQ9c6A==","shasum":"5bdbe51bef36da89d2fa97fc8cc1ad3e5214d331","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-6.1.0-alpha.3.tgz","fileCount":10,"unpackedSize":21142,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJepLK8CRA9TVsSAnZWagAA9IMP/0jn/20a6g6VZngutdrT\n6zZfCgy1ZveVeXwlzFMLxg7s8SM1iIRFj1GBwgYLrF4TuRN5k6hyPpHkcHd0\nAdSZz00KN2v6NhzqOoKKSZ5WKj3LJyPoeHS6cJQVjeDOPptNP3Vh6T2M6MYS\nvp/75o7nwHadkG44amjJEJckZW+aT6ZzhSkQJVMy7l7XTJTp89xCwqLvCBim\nLucBUTyIZu4gWl/bTcJF1OpGKxjbH89jXLVJ1Nxuua3P+8dXhbca9yDFT9x4\nK8s9iVR6XidKF826wmM3FT33OvzeA9xmH2H/dVN7XwAAjc2qYY/FBn0bx/dX\nBWLxTkoHLH1puD+UaxfqHlFnBg0tA73RrAnP2vM0q/2OhGQq9X4E+ph7TDsV\nl2r65eRcPvbY0ykE/PIGp5axqQRtNVehG9IMJOZao9O6w/+sA+qeH38JCp6Y\n1Km12x0ewv5WMp2R+M0CWJhsnEI516aWmbBt3JyI7qHbNrzNUYvLnv2ueCsS\nk0HOvPsOzmRwbh+kmrWY6XUsBc+7XTbSFejtOemzvL2yIvvxWx2UuPYulkxq\n3tLxsZe5TsNcJGtcs+sDzR0h7SVfRCWTZbYcVlhxvseTiepJsCrfuI8RsbPL\nH7b8m08d1FE0dtt70sbWePpyV0EQAO9gzITRJMSy1yMr4kOy/7CqgsHVhniz\nQmL7\r\n=gy6U\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCsuF43dYhyL9Ke2+Jk1tb6mpjYdKYmCpcTq0f8RhRoaQIhAPPBEhkppP6jiX5ujooZP6ll8018MzzRgDZZZqfJiXQl"}]},"maintainers":[{"email":"rpgmorpheus@gmail.com","name":"zeecoder"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_6.1.0-alpha.3_1587851964303_0.22771490823194918"},"_hasShrinkwrap":false},"6.1.0":{"name":"use-resize-observer","version":"6.1.0","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","types":"dist/index.d.ts","sideEffects":false,"repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"contact@hubertviktor.com"},"license":"MIT","scripts":{"build":"rollup -c && tsc && cp dist/index.d.ts polyfilled.d.ts","watch":"KARMA_BROWSERS=Chrome run-p 'src:watch' 'karma:watch'","src:watch":"rollup -c -w","check:size":"size-limit","check:types":"tsc -p tests","test":"run-s 'build' 'check:size' 'check:types' 'test:create:ssr' 'test:headless:*'","test:create:ssr":"node ./tests/ssr/create-ssr-test.js","test:chrome":"KARMA_BROWSERS=Chrome yarn karma:run","test:headless:chrome":"KARMA_BROWSERS=ChromeHeadless yarn karma:run","test:firefox":"KARMA_BROWSERS=Firefox yarn karma:run","test:headless:firefox":"KARMA_BROWSERS=FirefoxHeadless yarn karma:run","karma:run":"karma start --singleRun","karma:watch":"karma start","prepublish":"yarn build"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,ts,md}":["prettier --write"]},"peerDependencies":{"react":">=16.8.0","react-dom":">=16.8.0"},"devDependencies":{"@babel/core":"^7.7.7","@babel/plugin-transform-runtime":"^7.9.0","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.9.4","@babel/preset-typescript":"^7.9.0","@rollup/plugin-inject":"^4.0.1","@size-limit/preset-small-lib":"^4.4.5","@testing-library/react":"^10.0.2","@types/karma":"^5.0.0","@types/karma-jasmine":"^3.1.0","@types/react":"^16.9.34","@types/react-dom":"^16.9.6","babel-loader":"^8.1.0","delay":"^4.1.0","husky":"^4.2.5","karma":"^5.0.1","karma-chrome-launcher":"^3.0.0","karma-firefox-launcher":"^1.3.0","karma-jasmine":"^3.1.1","karma-sourcemap-loader":"^0.3.7","karma-spec-reporter":"^0.0.32","karma-webpack":"^4.0.2","lint-staged":"^10.1.3","npm-run-all":"^4.1.5","prettier":"^2.0.4","react":"^16.9.0","react-dom":"^16.9.0","rollup":"^2.6.1","rollup-plugin-babel":"^4.4.0","size-limit":"^4.4.5","typescript":"^3.8.3"},"dependencies":{"resize-observer-polyfill":"^1.5.1"},"gitHead":"96564416473cf4c5abf597b89fe16aa8d139f0b0","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@6.1.0","_npmVersion":"6.5.0","_nodeVersion":"11.7.0","_npmUser":{"name":"zeecoder","email":"contact@hubertviktor.com"},"dist":{"integrity":"sha512-SiPcWHiIQ1CnHmb6PxbYtygqiZXR0U9dNkkbpX9VYnlstUwF8+QqpUTrzh13pjPwcjMVGR+QIC+nvF5ujfFNng==","shasum":"d4d267a940dbf9c326da6042f8a4bb8c89d29729","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-6.1.0.tgz","fileCount":10,"unpackedSize":21373,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeyp2nCRA9TVsSAnZWagAAMRwP/A0Gmw2jtx0dYCp7vI8b\nMblf+IRAHmBglvFIvNZiJqjtfsKizfUQYMg6ydmgJxIb/FVveBeU5Ju0ca/c\ntO2fSv02+5iXC9lmrehm6zDy/vQzzY3Aede6VpQ91ZBejCvI98r7D0z+Q/GZ\nMpR4t6DzRY1vrsizLlC4gtoH9mFFTMtWZYsOaVGvlTwsu3f9r+pIIWLFHUwQ\neAkcKfsjWnqUpaEjhZK4jtMTienrmzmGDiYTHQoCbu5guv1LLJThGSRoywxq\n1X9P+qfOCyDpNo3/jmp7F0wk34sFlQdmOfD4WCsgF8iCfOF1XZW8gCgoWAQD\nzJzV4rpGMdWNZT40JqYHGfYBCWYUq9V42HansvkWSNPEYfo/B4L6c9aSbZeC\nUtzqycMxDe9eP5xj6zDjmVtlzWSjeFu2MSEMN304BBQFRKY09WJFkgFO0F2e\nRJpn4ODSbPUgqLq3XtaA/zWTyBSoAYBBY0NzSlDU+S3Kg+3Gn59juLWQV11d\n3jWJpd1zIzuEqzto632Cc3dkSoYZLmlAWQNzeyxHoTXabdVmZplzY9IJA4Zi\n7MrBFYvTljyUT53zsGcg6PCUncZil+j8cPga8Ul5Ks3uCl0naKy9fgl02w9m\ncPPAx+l0S6sSTtTE0uqc+Xhugj6v1Esqg9cOp8RDnjb1djX7F23kiTR/8MlN\nuLzO\r\n=gACf\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIElVstqUpqL0aD4Ior56wxf+u5WKwhZLhrpIwrI7+jkqAiEAvTfzfIltpfbSWYKiHvZmjTPw5RIptyU+Vb5PJtTnQmU="}]},"maintainers":[{"email":"rpgmorpheus@gmail.com","name":"zeecoder"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_6.1.0_1590336935024_0.5388285658183978"},"_hasShrinkwrap":false},"6.2.0-alpha.1":{"name":"use-resize-observer","version":"6.2.0-alpha.1","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","types":"dist/index.d.ts","sideEffects":false,"repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"contact@hubertviktor.com"},"license":"MIT","scripts":{"build":"rollup -c && tsc && cp dist/index.d.ts polyfilled.d.ts","watch":"KARMA_BROWSERS=Chrome run-p 'src:watch' 'karma:watch'","src:watch":"rollup -c -w","check:size":"size-limit","check:types":"tsc -p tests","test":"run-s 'build' 'check:size' 'check:types' 'test:create:ssr' 'test:headless:*'","test:create:ssr":"node ./tests/ssr/create-ssr-test.js","test:chrome":"KARMA_BROWSERS=Chrome yarn karma:run","test:headless:chrome":"KARMA_BROWSERS=ChromeHeadless yarn karma:run","test:firefox":"KARMA_BROWSERS=Firefox yarn karma:run","test:headless:firefox":"KARMA_BROWSERS=FirefoxHeadless yarn karma:run","karma:run":"karma start --singleRun","karma:watch":"karma start","prepublish":"yarn build"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,ts,md}":["prettier --write"]},"peerDependencies":{"react":">=16.8.0","react-dom":">=16.8.0"},"devDependencies":{"@babel/core":"^7.7.7","@babel/plugin-transform-runtime":"^7.9.0","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.9.4","@babel/preset-typescript":"^7.9.0","@rollup/plugin-babel":"^5.2.1","@rollup/plugin-inject":"^4.0.1","@size-limit/preset-small-lib":"^4.4.5","@testing-library/react":"^11.0.4","@types/karma":"^5.0.0","@types/karma-jasmine":"^3.1.0","@types/react":"^16.9.34","@types/react-dom":"^16.9.6","babel-loader":"^8.1.0","delay":"^4.1.0","husky":"^4.2.5","karma":"^5.0.1","karma-chrome-launcher":"^3.0.0","karma-firefox-launcher":"^1.3.0","karma-jasmine":"^4.0.1","karma-sourcemap-loader":"^0.3.7","karma-spec-reporter":"^0.0.32","karma-webpack":"^4.0.2","lint-staged":"^10.1.3","npm-run-all":"^4.1.5","prettier":"^2.0.4","react":"^16.9.0","react-dom":"^16.9.0","rollup":"^2.6.1","size-limit":"^4.4.5","typescript":"^4.0.3"},"dependencies":{"resize-observer-polyfill":"^1.5.1"},"gitHead":"81af006e81b6996eb8891901810d3eff0d9ae0d5","readme":"# use-resize-observer\n\n<h1 align=\"center\">\n\t<br>\n\t<img width=\"250\" src=\"https://raw.githubusercontent.com/ZeeCoder/use-resize-observer/master/media/Logo.png\" alt=\"useResizeObserver\">\n\t<br>\n    <br>\n</h1>\n\nA React hook that allows you to use a ResizeObserver to measure an element's size.\n\n[![npm version](https://badge.fury.io/js/use-resize-observer.svg)](https://npmjs.com/package/use-resize-observer)\n[![build](https://travis-ci.org/ZeeCoder/use-resize-observer.svg?branch=master)](https://travis-ci.org/ZeeCoder/use-resize-observer)\n\n## Highlights\n\n- Written in **TypeScript**.\n- **Tiny**: 500B (minified, gzipped) Monitored by [size-limit](https://github.com/ai/size-limit).\n- Exposes an **onResize callback** if you need more control.\n- Works with **SSR**.\n- Works with **CSS-in-JS**.\n- **Supports custom refs** in case you [had one already](#passing-in-your-own-ref).\n- Handles many edge cases you might not even think of.\n  (See this documentation and the test cases.)\n- [Throttle / Debounce](#throttle--debounce)\n- **Tested** in real browsers. (Headless Chrome and Firefox).\n\n## In Action\n\n[CodeSandbox Demo](https://codesandbox.io/s/nrp0w2r5z0)\n\n## Install\n\n```sh\nyarn add use-resize-observer --dev\n# or\nnpm install use-resize-observer --save-dev\n```\n\n## Basic Usage\n\nNote that the default builds are not polyfilled! For instructions and alternatives,\nsee the [Transpilation / Polyfilling](#transpilation--polyfilling) section.\n\n```tsx\nimport React from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\n\nconst App = () => {\n  const { ref, width = 1, height = 1 } = useResizeObserver<HTMLDivElement>();\n\n  return (\n    <div ref={ref}>\n      Size: {width}x{height}\n    </div>\n  );\n};\n```\n\n## Passing in Your Own `ref`\n\nYou can pass in your own ref instead of using the one provided.\nThis can be useful if you already have a ref you want to measure.\n\n```ts\nconst ref = useRef<HTMLDivElement>(null);\nconst { width, height } = useResizeObserver<HTMLDivElement>({ ref });\n```\n\nYou can even reuse the same hook instance to measure different elements:\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-reusing-refs-buftd)\n\n## Measuring a raw element\n\nThere might be situations where you have an element already that you need to measure.\n`ref` now accepts elements as well, not just refs, which means that you can do this:\n\n```ts\nconst { width, height } = useResizeObserver<HTMLDivElement>({\n  ref: divElement,\n});\n```\n\n## Observing components mounted with a delay\n\nOften times you might have to wait before you can mount a component.\nUnfortunately if you use a ref, the hook will not be able to pick up its \"current\"\nvalue being changed afterwards. (Which is by design by React.)\n\nTo handle this case, you can do one of these three:\n\n- Use the provided callback ref\n- Refactor to a component which you can mount after a \"loading\" concluded with\n  the hook within it. This means that the hook will be mounted with the measured\n  element, which means that a regular ref will work fine.\n- Use local state to store the custom ref the hook needs to observe, with \"null\"\n  as its starting value. Then once loading concluded, set this state to the ref.\n  This'll make the hook notice a change from null to the ref, where this time the\n  ref actually has its current value set properly as well.\n  ([See example here](https://codesandbox.io/s/damp-cookies-6bdrg?file=/src/App.js))\n\nUsing a callback ref is recommended, and might look like this:\n\n```tsx\nconst { callbackRef, width, height } = useResizeObserver<HTMLDivElement>();\nconst [loaded, setLoaded] = useState(false);\n\n// Simulating a loading state.\nuseEffect(() => {\n  setTimeout(() => {\n    setLoaded(true);\n  }, 2000);\n}, []);\n\nif (!loaded) {\n  return <div>Loading...</div>;\n}\n\nreturn <div ref={callbackRef}></div>;\n```\n\n## Using a single hook to measure multiple refs\n\nThe hook reacts to ref changes, as it resolves it to an element to observe.\nThis means that you can freely change the custom `ref` option from one ref to\nanother and back, and the hook will start observing whatever is set in its options.\n\n## Opting Out of (or Delaying) ResizeObserver instantiation\n\nIn certain cases you might want to delay creating a ResizeObserver instance.\n\nYou might provide a library, that only optionally provides observation features\nbased on props, which means that while you have the hook within your component,\nyou might not want to actually initialise it.\n\nAnother example is that you might want to entirely opt out of initialising, when\nyou run some tests, where the environment does not provide the `ResizeObserver`.\n\n([See discussions](https://github.com/ZeeCoder/use-resize-observer/issues/40))\n\nYou can do one of the following depending on your needs:\n\n- Use a callback ref, or provide a custom ref conditionally, only when needed.\n  The hook will not create a ResizeObserver instance up until there's something\n  there to actually observe.\n- Patch the test environment, and make a polyfill available as the ResizeObserver.\n  (This assumes you don't already use the polyfilled version, which would switch\n  to the polyfill when no native implementation was available.)\n\n## The \"onResize\" callback\n\nBy the default the hook will trigger a re-render on all changes to the target\nelement's width and / or height.\n\nYou can opt out of this behaviour, by providing an `onResize` callback function,\nwhich'll simply receive the width and height of the element when it changes, so\nthat you can decide what to do with it:\n\n```tsx\nimport React from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\n\nconst App = () => {\n  // width / height will not be returned here when the onResize callback is present\n  const { ref } = useResizeObserver<HTMLDivElement>({\n    onResize: ({ width, height }) => {\n      // do something here.\n    },\n  });\n\n  return <div ref={ref} />;\n};\n```\n\nThis callback also makes it possible to implement your own hooks that report only\nwhat you need, for example:\n\n- Reporting only width or height\n- Throttle / debounce\n\n## Throttle / Debounce\n\nYou might want to receive values less frequently than changes actually occur.\n\nWhile this hook does not come with its own implementation of throttling / debouncing,\nyou can use the `onResize` callback to implement your own version:\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-throttle-and-debounce-8uvsg)\n\n## Defaults (SSR)\n\nOn initial mount the ResizeObserver will take a little time to report on the\nactual size.\n\nUntil the hook receives the first measurement, it returns `undefined` for width\nand height by default.\n\nYou can override this behaviour, which could be useful for SSR as well.\n\n```ts\nconst { ref, width = 100, height = 50 } = useResizeObserver<HTMLDivElement>();\n```\n\nHere \"width\" and \"height\" will be 100 and 50 respectively, until the\nResizeObserver kicks in and reports the actual size.\n\n## Without Defaults\n\nIf you only want real measurements (only values from the ResizeObserver without\nany default values), then you can just leave defaults off:\n\n```ts\nconst { ref, width, height } = useResizeObserver<HTMLDivElement>();\n```\n\nHere \"width\" and \"height\" will be undefined until the ResizeObserver takes its\nfirst measurement.\n\n## Container/Element Query with CSS-in-JS\n\nIt's possible to apply styles conditionally based on the width / height of an\nelement using a CSS-in-JS solution, which is the basic idea behind\ncontainer/element queries:\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-container-query-with-css-in-js-iitxl)\n\n## Transpilation / Polyfilling\n\nBy default the library provides transpiled ES5 modules in CJS / ESM module formats.\n\nPolyfilling is recommended to be done in the host app, and not within imported\nlibraries, as that way consumers have control over the exact polyfills being used.\n\nThat said, there's a [polyfilled](https://github.com/que-etc/resize-observer-polyfill)\nCJS module that can be used for convenience (Not affecting globals):\n\n```js\nimport useResizeObserver from \"use-resize-observer/polyfilled\";\n```\n\n## Related\n\n- [@zeecoder/container-query](https://github.com/ZeeCoder/container-query)\n- [@zeecoder/react-resize-observer](https://github.com/ZeeCoder/react-resize-observer)\n\n## License\n\nMIT\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@6.2.0-alpha.1","_npmVersion":"6.5.0","_nodeVersion":"11.7.0","_npmUser":{"name":"zeecoder","email":"contact@hubertviktor.com"},"dist":{"integrity":"sha512-SnUjd9/sz0dIPSJ2KcKk5rvkaWeaWBuc9bFiNlsxOd6ovnYPlxjcVxLjapd2NReqlpCFKjAkmaEOsG/rA3lrgw==","shasum":"10b42f4d82f238d01fd4715ddfaadae2250bb81d","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-6.2.0-alpha.1.tgz","fileCount":12,"unpackedSize":36155,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfgvw7CRA9TVsSAnZWagAAGV0P+QGfd1HzmdwVM2jF6R+K\nNYiIvTaTHPUm+bZFpBtuGfirCUrb8UdFxSmDdhV+LEAqIoqDEBZNFkWw6/4p\ny4JrPlbhqKQLWDZc7+qcyVGcLXLudtLf57kIuclfpfjLWL4zBaPiVDfV4yue\nZF7SvL+2uoPovJKQo076PA53Gp8SrA27LHcgK3sOnabc58xyPYAXTm4kqyrd\niaDW+z9Nr+Jz4UrFobTu6vO0h5HMkt7URxlztDTwf9oXjqLN+AEEKQMxNRvS\nBfq5TBmbYX00RS6kqi/pEJW7NMa7re0xABX2BtlAnlezJQlSgNNplgd2PYML\nWyC/DEBp/dprupb7M92tM66a4HVM+/2pQ854so6XcqqHU91CERDFwRlITeFF\nL9Qt3eNBLcegG4nZIFdkGmODSC0U5aRk2fyNP51N5fQaqipU1Fk1jui12hW+\nf0fSEwEY35j61Khfv8WT4ah0RfCGNfmWaRSzk04/c/bbQJ4OUP47QDbb+Tid\nHT2lrRXslLFFasPyjTlqGKu4kJbDT4XMztswGtxKymWLE3ekBgNLZHTzVryX\nb/+3pNPUStHy8qvP5F6s+xkRpf/dB8u99+dtN+LLoAzAZPDYL41FlgJBqnm1\nEVhX1DxU0coZbvA0xw4OatF924zRRv5Ca/SmrvLNJcaqLDF5oAx1bMcQhVZw\nk8QZ\r\n=Is3r\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIG5YNuxLquG81QCxJzROoQkNlvaulZmizmN1ZLWFG1bgAiAKR9FzkBa78PUba5mW1lDncuQcnZLx/4JhEv5GqUNJiw=="}]},"maintainers":[{"name":"zeecoder","email":"contact@hubertviktor.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_6.2.0-alpha.1_1602419770756_0.8570374907463643"},"_hasShrinkwrap":false},"7.0.0-alpha.1":{"name":"use-resize-observer","version":"7.0.0-alpha.1","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","types":"dist/index.d.ts","sideEffects":false,"repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"contact@hubertviktor.com"},"license":"MIT","scripts":{"build":"rollup -c && tsc && cp dist/index.d.ts polyfilled.d.ts","watch":"KARMA_BROWSERS=Chrome run-p 'src:watch' 'karma:watch'","src:watch":"rollup -c -w","check:size":"size-limit","check:types":"tsc -p tests","test":"run-s 'build' 'check:size' 'check:types' 'test:create:ssr' 'test:headless:*'","test:create:ssr":"node ./tests/ssr/create-ssr-test.js","test:chrome":"KARMA_BROWSERS=Chrome yarn karma:run","test:headless:chrome":"KARMA_BROWSERS=ChromeHeadless yarn karma:run","test:firefox":"KARMA_BROWSERS=Firefox yarn karma:run","test:headless:firefox":"KARMA_BROWSERS=FirefoxHeadless yarn karma:run","karma:run":"karma start --singleRun","karma:watch":"karma start","prepublish":"yarn build"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,ts,md}":["prettier --write"]},"peerDependencies":{"react":">=16.8.0","react-dom":">=16.8.0"},"devDependencies":{"@babel/core":"^7.7.7","@babel/plugin-transform-runtime":"^7.9.0","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.9.4","@babel/preset-typescript":"^7.9.0","@rollup/plugin-babel":"^5.2.1","@rollup/plugin-inject":"^4.0.1","@size-limit/preset-small-lib":"^4.4.5","@testing-library/react":"^11.0.4","@types/karma":"^5.0.0","@types/karma-jasmine":"^3.1.0","@types/react":"^16.9.34","@types/react-dom":"^16.9.6","babel-loader":"^8.1.0","delay":"^4.1.0","husky":"^4.2.5","karma":"^5.0.1","karma-chrome-launcher":"^3.0.0","karma-firefox-launcher":"^1.3.0","karma-jasmine":"^4.0.1","karma-sourcemap-loader":"^0.3.7","karma-spec-reporter":"^0.0.32","karma-webpack":"^4.0.2","lint-staged":"^10.1.3","npm-run-all":"^4.1.5","prettier":"^2.0.4","react":"^16.9.0","react-dom":"^16.9.0","rollup":"^2.6.1","size-limit":"^4.4.5","typescript":"^4.0.3"},"dependencies":{"resize-observer-polyfill":"^1.5.1"},"gitHead":"e1b2823e68fa02626da83650f666bfdfb41a852c","readme":"# use-resize-observer\n\n<h1 align=\"center\">\n\t<br>\n\t<img width=\"250\" src=\"https://raw.githubusercontent.com/ZeeCoder/use-resize-observer/master/media/Logo.png\" alt=\"useResizeObserver\">\n\t<br>\n    <br>\n</h1>\n\nA React hook that allows you to use a ResizeObserver to measure an element's size.\n\n[![npm version](https://badge.fury.io/js/use-resize-observer.svg)](https://npmjs.com/package/use-resize-observer)\n[![build](https://travis-ci.org/ZeeCoder/use-resize-observer.svg?branch=master)](https://travis-ci.org/ZeeCoder/use-resize-observer)\n\n## Highlights\n\n- Written in **TypeScript**.\n- **Tiny**: [500B](.size-limit.json) (minified, gzipped) Monitored by [size-limit](https://github.com/ai/size-limit).\n- Exposes an **onResize callback** if you need more control.\n- Works with **SSR**.\n- Works with **CSS-in-JS**.\n- **Supports custom refs** in case you [had one already](#passing-in-your-own-ref).\n- **Uses RefCallback by default** To address delayed mounts and changing ref elements.\n- **Ships a polyfilled version**\n- Handles many edge cases you might not even think of.\n  (See this documentation and the test cases.)\n- [Throttle / Debounce](#throttle--debounce)\n- **Tested** in real browsers. (Headless Chrome and Firefox).\n\n## In Action\n\n[CodeSandbox Demo](https://codesandbox.io/s/nrp0w2r5z0)\n\n## Install\n\n```sh\nyarn add use-resize-observer --dev\n# or\nnpm install use-resize-observer --save-dev\n```\n\n## Basic Usage\n\nNote that the default builds are not polyfilled! For instructions and alternatives,\nsee the [Transpilation / Polyfilling](#transpilation--polyfilling) section.\n\n```tsx\nimport React from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\n\nconst App = () => {\n  const { ref, width = 1, height = 1 } = useResizeObserver<HTMLDivElement>();\n\n  return (\n    <div ref={ref}>\n      Size: {width}x{height}\n    </div>\n  );\n};\n```\n\nNote that \"ref\" here is a `RefCallback`, not a `RefObject`, meaning you won't be\nable to access \"ref.current\" if you need the element itself.\nTo get the raw element, either you use your own RefObject (see later in this doc)\nor you hook in the returned ref callback, like so:\n\n### Getting the raw element from the default `RefCallback`\n\n```tsx\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\n\nconst useMergedCallbackRef = (...callbacks: Function[]) => {\n  // Storing callbacks in a ref, so that we don't need to memoise them in\n  // renders when using this hook.\n  const callbacksRegistry = useRef<Function[]>(callbacks);\n\n  useEffect(() => {\n    callbacksRegistry.current = callbacks;\n  }, [...callbacks]);\n\n  return useCallback((element) => {\n    callbacksRegistry.current.forEach((callback) => callback(element));\n  }, []);\n};\n\nconst App = () => {\n  const { ref, width = 1, height = 1 } = useResizeObserver<HTMLDivElement>();\n\n  const mergedCallbackRef = useMergedCallbackRef(\n    ref,\n    (element: HTMLDivElement) => {\n      // Do whatever you want with the `element`.\n    }\n  );\n\n  return (\n    <div ref={mergedCallbackRef}>\n      Size: {width}x{height}\n    </div>\n  );\n};\n```\n\n## Passing in Your Own `ref`\n\nYou can pass in your own ref instead of using the one provided.\nThis can be useful if you already have a ref you want to measure.\n\n```ts\nconst ref = useRef<HTMLDivElement>(null);\nconst { width, height } = useResizeObserver<HTMLDivElement>({ ref });\n```\n\nYou can even reuse the same hook instance to measure different elements:\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-reusing-refs-buftd)\n\n## Measuring a raw element\n\nThere might be situations where you have an element already that you need to measure.\n`ref` now accepts elements as well, not just refs, which means that you can do this:\n\n```ts\nconst { width, height } = useResizeObserver<HTMLDivElement>({\n  ref: divElement,\n});\n```\n\n## Using a single hook to measure multiple refs\n\nThe hook reacts to ref changes, as it resolves it to an element to observe.\nThis means that you can freely change the custom `ref` option from one ref to\nanother and back, and the hook will start observing whatever is set in its options.\n\n## Opting Out of (or Delaying) ResizeObserver instantiation\n\nIn certain cases you might want to delay creating a ResizeObserver instance.\n\nYou might provide a library, that only optionally provides observation features\nbased on props, which means that while you have the hook within your component,\nyou might not want to actually initialise it.\n\nAnother example is that you might want to entirely opt out of initialising, when\nyou run some tests, where the environment does not provide the `ResizeObserver`.\n\n([See discussions](https://github.com/ZeeCoder/use-resize-observer/issues/40))\n\nYou can do one of the following depending on your needs:\n\n- Use the default `ref` RefCallback, or provide a custom ref conditionally,\n  only when needed. The hook will not create a ResizeObserver instance up until\n  there's something there to actually observe.\n- Patch the test environment, and make a polyfill available as the ResizeObserver.\n  (This assumes you don't already use the polyfilled version, which would switch\n  to the polyfill when no native implementation was available.)\n\n## The \"onResize\" callback\n\nBy the default the hook will trigger a re-render on all changes to the target\nelement's width and / or height.\n\nYou can opt out of this behaviour, by providing an `onResize` callback function,\nwhich'll simply receive the width and height of the element when it changes, so\nthat you can decide what to do with it:\n\n```tsx\nimport React from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\n\nconst App = () => {\n  // width / height will not be returned here when the onResize callback is present\n  const { ref } = useResizeObserver<HTMLDivElement>({\n    onResize: ({ width, height }) => {\n      // do something here.\n    },\n  });\n\n  return <div ref={ref} />;\n};\n```\n\nThis callback also makes it possible to implement your own hooks that report only\nwhat you need, for example:\n\n- Reporting only width or height\n- Throttle / debounce\n- Wrap in `requestAnimationFrame`\n\n## Throttle / Debounce\n\nYou might want to receive values less frequently than changes actually occur.\n\nWhile this hook does not come with its own implementation of throttling / debouncing,\nyou can use the `onResize` callback to implement your own version:\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-throttle-and-debounce-8uvsg)\n\n## Defaults (SSR)\n\nOn initial mount the ResizeObserver will take a little time to report on the\nactual size.\n\nUntil the hook receives the first measurement, it returns `undefined` for width\nand height by default.\n\nYou can override this behaviour, which could be useful for SSR as well.\n\n```ts\nconst { ref, width = 100, height = 50 } = useResizeObserver<HTMLDivElement>();\n```\n\nHere \"width\" and \"height\" will be 100 and 50 respectively, until the\nResizeObserver kicks in and reports the actual size.\n\n## Without Defaults\n\nIf you only want real measurements (only values from the ResizeObserver without\nany default values), then you can just leave defaults off:\n\n```ts\nconst { ref, width, height } = useResizeObserver<HTMLDivElement>();\n```\n\nHere \"width\" and \"height\" will be undefined until the ResizeObserver takes its\nfirst measurement.\n\n## Container/Element Query with CSS-in-JS\n\nIt's possible to apply styles conditionally based on the width / height of an\nelement using a CSS-in-JS solution, which is the basic idea behind\ncontainer/element queries:\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-container-query-with-css-in-js-iitxl)\n\n## Transpilation / Polyfilling\n\nBy default the library provides transpiled ES5 modules in CJS / ESM module formats.\n\nPolyfilling is recommended to be done in the host app, and not within imported\nlibraries, as that way consumers have control over the exact polyfills being used.\n\nThat said, there's a [polyfilled](https://github.com/que-etc/resize-observer-polyfill)\nCJS module that can be used for convenience (Not affecting globals):\n\n```js\nimport useResizeObserver from \"use-resize-observer/polyfilled\";\n```\n\n## Related\n\n- [@zeecoder/container-query](https://github.com/ZeeCoder/container-query)\n- [@zeecoder/react-resize-observer](https://github.com/ZeeCoder/react-resize-observer)\n\n## License\n\nMIT\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@7.0.0-alpha.1","_npmVersion":"6.5.0","_nodeVersion":"11.7.0","_npmUser":{"name":"zeecoder","email":"contact@hubertviktor.com"},"dist":{"integrity":"sha512-j8/pmspFy74E+XnNMRMepAa2DWLoIe66Mkzx3PxzXALBmiKLZoZk96ypOfRY90bjBoQr5R/q/B/YzXUkFrQ70w==","shasum":"170113645931647e852eb97eabdf0b81a9a4ffe3","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-7.0.0-alpha.1.tgz","fileCount":12,"unpackedSize":35977,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfnWvsCRA9TVsSAnZWagAAN6EP/AxljmWi4aruiDsHE1py\nWWc+PAjPhz4Ym22L3ROq1DglqMJTuTia6wQCyETwu4txKfMdeYNAkbjTF8Aq\neaHKdbKE4DePn6AQ//+CvAzsYjtEltt7dfseBtcWVB2wkhWIBPH3L4EBXOj1\nZkp8E5h32wVPz+ysYG6xg5GkLO+LSuLww3xglHY/nALDmR+ACHta95uOUnS7\n+Meu4fIB/9t4Apd7QFcFZgmQR9xmuXRywksfJH94OYgVMC1NN0cKpovTOYqT\n2qrcwcKplk77uHe4eIG/UmQpbF7VThefjfr1gAqJHdish9ARYcJtL1zuytDR\n8OaCfYP29C5pPXu7bvpnhd4YE1Px9hIFZobl+P48w2Ek6Nag8DKyRzcMtZJ1\nkF2faejl0VrRo0icZjtg9cdxLLD7oz1mWHE0hZKCb1siudTbAtbeYj6OL2iY\nMJZKjEeR1R6Mr79njUR5zwIMrOshqOXCy4dp+ouG+0+QrZDWu2Yr7NHTvrYH\nlZ31eKa/p7VfSJfQLTSUuv0UviNZU3CbX4SmXhCrhNsmi8XaF596X3qkwx2K\n8IHyjzoJQleJR7v+EFNP84gedS0egm4puOGZzp8xuJQyvg2RuUoTWMbN1jzc\nthMR5OrgxMnFhKjiYn22NWQ6QOOL4DjJq4bsksOhPuMzO/fLVT+mei9v7sXn\n6yb4\r\n=86EG\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICAT90lhmlzsJfWQUZC+B4yzMwnNyuaoK84houRcH5LQAiEApbvdR0yL4S8voCLj7OhipO1iAazrKtJQclCPwmhokmA="}]},"maintainers":[{"name":"zeecoder","email":"contact@hubertviktor.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_7.0.0-alpha.1_1604152300414_0.7184672429401509"},"_hasShrinkwrap":false},"7.0.0-alpha.3":{"name":"use-resize-observer","version":"7.0.0-alpha.3","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","types":"dist/index.d.ts","sideEffects":false,"repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"contact@hubertviktor.com"},"license":"MIT","scripts":{"build":"rollup -c && tsc && cp dist/index.d.ts polyfilled.d.ts","watch":"KARMA_BROWSERS=Chrome run-p 'src:watch' 'karma:watch'","src:watch":"rollup -c -w","check:size":"size-limit","check:types":"tsc -p tests","test":"run-s 'build' 'check:size' 'check:types' 'test:create:ssr' 'test:bs:*'","test:create:ssr":"node ./tests/ssr/create-ssr-test.js","test:chrome":"KARMA_BROWSERS=Chrome yarn karma:run","test:headless:chrome":"KARMA_BROWSERS=ChromeHeadless yarn karma:run","test:firefox":"KARMA_BROWSERS=Firefox yarn karma:run","test:headless:firefox":"KARMA_BROWSERS=FirefoxHeadless yarn karma:run","karma:run":"karma start --singleRun","karma:watch":"karma start","prepublish":"yarn build","test:bs:modern":"yarn karma:run --useBrowserStack","test:bs:ie":"yarn karma:run --useBrowserStack --runIeTests"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,ts,md}":["prettier --write"]},"peerDependencies":{"react":">=16.8.0","react-dom":">=16.8.0"},"devDependencies":{"@babel/core":"^7.7.7","@babel/plugin-transform-runtime":"^7.9.0","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.9.4","@babel/preset-typescript":"^7.9.0","@rollup/plugin-babel":"^5.2.1","@rollup/plugin-inject":"^4.0.1","@semantic-release/changelog":"^5.0.1","@semantic-release/commit-analyzer":"^8.0.1","@semantic-release/git":"^9.0.0","@semantic-release/github":"^7.1.1","@semantic-release/npm":"^7.0.6","@semantic-release/release-notes-generator":"^9.0.1","@size-limit/preset-small-lib":"^4.4.5","@testing-library/react":"^11.0.4","@types/karma":"^5.0.0","@types/karma-jasmine":"^3.1.0","@types/react":"^16.9.34","@types/react-dom":"^16.9.6","babel-loader":"^8.1.0","delay":"^4.1.0","husky":"^4.2.5","karma":"^5.0.1","karma-browserstack-launcher":"^1.6.0","karma-chrome-launcher":"^3.0.0","karma-firefox-launcher":"^1.3.0","karma-jasmine":"^4.0.1","karma-sourcemap-loader":"^0.3.7","karma-spec-reporter":"^0.0.32","karma-webpack":"^4.0.2","lint-staged":"^10.1.3","npm-run-all":"^4.1.5","prettier":"^2.0.4","react":"^16.9.0","react-app-polyfill":"^2.0.0","react-dom":"^16.9.0","rollup":"^2.6.1","semantic-release":"^17.2.2","size-limit":"^4.4.5","typescript":"^4.0.3"},"dependencies":{"resize-observer-polyfill":"^1.5.1"},"gitHead":"2a798e1e73539f1f0f812c548598e80e5585aa98","readme":"# use-resize-observer\n\n<h1 align=\"center\">\n\t<br>\n\t<img width=\"250\" src=\"https://raw.githubusercontent.com/ZeeCoder/use-resize-observer/master/media/Logo.png\" alt=\"useResizeObserver\">\n\t<br>\n    <br>\n</h1>\n\nA React hook that allows you to use a ResizeObserver to measure an element's size.\n\n[![npm version](https://badge.fury.io/js/use-resize-observer.svg)](https://npmjs.com/package/use-resize-observer)\n[![build](https://travis-ci.org/ZeeCoder/use-resize-observer.svg?branch=master)](https://travis-ci.org/ZeeCoder/use-resize-observer)\n[![BrowserStack Status](https://automate.browserstack.com/badge.svg?badge_key=bTAyOUVpa3hENUgwMkJBTVhXcytCQjREangwcTJqT0czUGhRSEZta3ZwYz0tLVRSZ1NhVkdPZ01FMithOEh5ZGxoWHc9PQ==--49d9d8ad43d557894fb270c80fd1c24107a82f51)](https://automate.browserstack.com/public-build/bTAyOUVpa3hENUgwMkJBTVhXcytCQjREangwcTJqT0czUGhRSEZta3ZwYz0tLVRSZ1NhVkdPZ01FMithOEh5ZGxoWHc9PQ==--49d9d8ad43d557894fb270c80fd1c24107a82f51)\n\n## Highlights\n\n- Written in **TypeScript**.\n- **Tiny**: [500B](.size-limit.json) (minified, gzipped) Monitored by [size-limit](https://github.com/ai/size-limit).\n- Exposes an **onResize callback** if you need more control.\n- Works with **SSR**.\n- Works with **CSS-in-JS**.\n- **Supports custom refs** in case you [had one already](#passing-in-your-own-ref).\n- **Uses RefCallback by default** To address delayed mounts and changing ref elements.\n- **Ships a polyfilled version**\n- Handles many edge cases you might not even think of.\n  (See this documentation and the test cases.)\n- [Throttle / Debounce](#throttle--debounce)\n- **Tested in real browsers** (Currently latest Chrome, Safari, Firefox and IE 11, sponsored by BrowserStack)\n\n## In Action\n\n[CodeSandbox Demo](https://codesandbox.io/s/nrp0w2r5z0)\n\n## Install\n\n```sh\nyarn add use-resize-observer --dev\n# or\nnpm install use-resize-observer --save-dev\n```\n\n## Basic Usage\n\nNote that the default builds are not polyfilled! For instructions and alternatives,\nsee the [Transpilation / Polyfilling](#transpilation--polyfilling) section.\n\n```tsx\nimport React from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\n\nconst App = () => {\n  const { ref, width = 1, height = 1 } = useResizeObserver<HTMLDivElement>();\n\n  return (\n    <div ref={ref}>\n      Size: {width}x{height}\n    </div>\n  );\n};\n```\n\nNote that \"ref\" here is a `RefCallback`, not a `RefObject`, meaning you won't be\nable to access \"ref.current\" if you need the element itself.\nTo get the raw element, either you use your own RefObject (see later in this doc)\nor you hook in the returned ref callback, like so:\n\n### Getting the raw element from the default `RefCallback`\n\n```tsx\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\n\nconst useMergedCallbackRef = (...callbacks: Function[]) => {\n  // Storing callbacks in a ref, so that we don't need to memoise them in\n  // renders when using this hook.\n  const callbacksRegistry = useRef<Function[]>(callbacks);\n\n  useEffect(() => {\n    callbacksRegistry.current = callbacks;\n  }, [...callbacks]);\n\n  return useCallback((element) => {\n    callbacksRegistry.current.forEach((callback) => callback(element));\n  }, []);\n};\n\nconst App = () => {\n  const { ref, width = 1, height = 1 } = useResizeObserver<HTMLDivElement>();\n\n  const mergedCallbackRef = useMergedCallbackRef(\n    ref,\n    (element: HTMLDivElement) => {\n      // Do whatever you want with the `element`.\n    }\n  );\n\n  return (\n    <div ref={mergedCallbackRef}>\n      Size: {width}x{height}\n    </div>\n  );\n};\n```\n\n## Passing in Your Own `ref`\n\nYou can pass in your own ref instead of using the one provided.\nThis can be useful if you already have a ref you want to measure.\n\n```ts\nconst ref = useRef<HTMLDivElement>(null);\nconst { width, height } = useResizeObserver<HTMLDivElement>({ ref });\n```\n\nYou can even reuse the same hook instance to measure different elements:\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-reusing-refs-buftd)\n\n## Measuring a raw element\n\nThere might be situations where you have an element already that you need to measure.\n`ref` now accepts elements as well, not just refs, which means that you can do this:\n\n```ts\nconst { width, height } = useResizeObserver<HTMLDivElement>({\n  ref: divElement,\n});\n```\n\n## Using a single hook to measure multiple refs\n\nThe hook reacts to ref changes, as it resolves it to an element to observe.\nThis means that you can freely change the custom `ref` option from one ref to\nanother and back, and the hook will start observing whatever is set in its options.\n\n## Opting Out of (or Delaying) ResizeObserver instantiation\n\nIn certain cases you might want to delay creating a ResizeObserver instance.\n\nYou might provide a library, that only optionally provides observation features\nbased on props, which means that while you have the hook within your component,\nyou might not want to actually initialise it.\n\nAnother example is that you might want to entirely opt out of initialising, when\nyou run some tests, where the environment does not provide the `ResizeObserver`.\n\n([See discussions](https://github.com/ZeeCoder/use-resize-observer/issues/40))\n\nYou can do one of the following depending on your needs:\n\n- Use the default `ref` RefCallback, or provide a custom ref conditionally,\n  only when needed. The hook will not create a ResizeObserver instance up until\n  there's something there to actually observe.\n- Patch the test environment, and make a polyfill available as the ResizeObserver.\n  (This assumes you don't already use the polyfilled version, which would switch\n  to the polyfill when no native implementation was available.)\n\n## The \"onResize\" callback\n\nBy the default the hook will trigger a re-render on all changes to the target\nelement's width and / or height.\n\nYou can opt out of this behaviour, by providing an `onResize` callback function,\nwhich'll simply receive the width and height of the element when it changes, so\nthat you can decide what to do with it:\n\n```tsx\nimport React from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\n\nconst App = () => {\n  // width / height will not be returned here when the onResize callback is present\n  const { ref } = useResizeObserver<HTMLDivElement>({\n    onResize: ({ width, height }) => {\n      // do something here.\n    },\n  });\n\n  return <div ref={ref} />;\n};\n```\n\nThis callback also makes it possible to implement your own hooks that report only\nwhat you need, for example:\n\n- Reporting only width or height\n- Throttle / debounce\n- Wrap in `requestAnimationFrame`\n\n## Throttle / Debounce\n\nYou might want to receive values less frequently than changes actually occur.\n\nWhile this hook does not come with its own implementation of throttling / debouncing,\nyou can use the `onResize` callback to implement your own version:\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-throttle-and-debounce-8uvsg)\n\n## Defaults (SSR)\n\nOn initial mount the ResizeObserver will take a little time to report on the\nactual size.\n\nUntil the hook receives the first measurement, it returns `undefined` for width\nand height by default.\n\nYou can override this behaviour, which could be useful for SSR as well.\n\n```ts\nconst { ref, width = 100, height = 50 } = useResizeObserver<HTMLDivElement>();\n```\n\nHere \"width\" and \"height\" will be 100 and 50 respectively, until the\nResizeObserver kicks in and reports the actual size.\n\n## Without Defaults\n\nIf you only want real measurements (only values from the ResizeObserver without\nany default values), then you can just leave defaults off:\n\n```ts\nconst { ref, width, height } = useResizeObserver<HTMLDivElement>();\n```\n\nHere \"width\" and \"height\" will be undefined until the ResizeObserver takes its\nfirst measurement.\n\n## Container/Element Query with CSS-in-JS\n\nIt's possible to apply styles conditionally based on the width / height of an\nelement using a CSS-in-JS solution, which is the basic idea behind\ncontainer/element queries:\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-container-query-with-css-in-js-iitxl)\n\n## Transpilation / Polyfilling\n\nBy default the library provides transpiled ES5 modules in CJS / ESM module formats.\n\nPolyfilling is recommended to be done in the host app, and not within imported\nlibraries, as that way consumers have control over the exact polyfills being used.\n\nThat said, there's a [polyfilled](https://github.com/que-etc/resize-observer-polyfill)\nCJS module that can be used for convenience (Not affecting globals):\n\n```js\nimport useResizeObserver from \"use-resize-observer/polyfilled\";\n```\n\n## Related\n\n- [@zeecoder/container-query](https://github.com/ZeeCoder/container-query)\n- [@zeecoder/react-resize-observer](https://github.com/ZeeCoder/react-resize-observer)\n\n## License\n\nMIT\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@7.0.0-alpha.3","_nodeVersion":"12.19.0","_npmVersion":"6.14.8","dist":{"integrity":"sha512-bbjpfdU0mZUIbtkRLuigstjP7je41snKMLwYgGkYOytlhW6NaveKVhW2kr1cp74HQQQV2+J31eLjwgGdeBivKg==","shasum":"99d44d9e0e24a41528c2494bc19ff84ca64cd781","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-7.0.0-alpha.3.tgz","fileCount":14,"unpackedSize":48681,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfrD3BCRA9TVsSAnZWagAA4sYP/A3MR/kpE3w0fhWH4mjH\n6V+cCPTBcpnOMRvVrmDk09orsWf7dHNwlPvmX/yhBYwtMCHwqy1ksseP8H9K\nL1PlJqhvy9oJq651P9qEzVDr9HNNGQ47Rf1PplYV0/JKZmtqAOJw76n+1DCV\ncUpmT7hF7h8eFz8A9iMPUQUlwuMTadPIpUmw3GUh1r7ZKlKEeLcbD3crrVlI\n33fnAVMZKBVMw8mpTRuy5bnsM2YIrTBKicVbR1Y4H3cXDwNXKPObvB5yJY20\nl6CixquuQL3FPX17xaY5d7QCCXh3e1XVini5CPq2OcKAMzniiBDaFV0a2/SS\ndyXbwr1cxw/ybCjE4f692eWJxpRVHBa7N+ITucGDaqkKDxvu53HtxJw68Fl5\nRHEZ6OiSLQ22JffSlqFtEcDoKQNIhLq2ZvkQxvPxEGkBya+yf4QREu3n2YAo\nliUfvJMrrzo3A9PJqrFrQjGHa7+jo9nA+HGBfV3D5UUoVqL7XO7nj583/TjZ\n4eLH6pxlKU8Cfk0z979PTl0xwkeTdpefD4cCKsUdShkHOUoSRKvRsmT2oK6U\nukgKFx1Fu1Fq3cE9bYgRzf5X71hrr9Pve/Rt5U+xFAkFZPou9nSalWrPDA2R\nb4mKC5hmzMMQZ5CczdDig/zxjkPhhss7FSvuxfySysDz0EsKacTZJVUDaSq3\neN/8\r\n=9rO7\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDlYu+2hrVXMvFHTo3XAUJVWJxDNCUq9miN/SY3m3kR6AiEAjaUTQHhjZfHj8N3Jybl5t0Xf3uzQVB0dHkktE4Zgwe0="}]},"_npmUser":{"name":"zeecoder","email":"contact@hubertviktor.com"},"directories":{},"maintainers":[{"name":"zeecoder","email":"contact@hubertviktor.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_7.0.0-alpha.3_1605123520511_0.41521348530116975"},"_hasShrinkwrap":false},"7.0.0-alpha.4":{"name":"use-resize-observer","version":"7.0.0-alpha.4","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","types":"dist/index.d.ts","sideEffects":false,"repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"contact@hubertviktor.com"},"license":"MIT","scripts":{"build":"rollup -c && tsc && cp dist/index.d.ts polyfilled.d.ts","watch":"KARMA_BROWSERS=Chrome run-p 'src:watch' 'karma:watch'","src:watch":"rollup -c -w","check:size":"size-limit","check:types":"tsc -p tests","test":"run-s 'build' 'check:size' 'check:types' 'test:create:ssr' 'test:bs:*'","test:create:ssr":"node ./tests/ssr/create-ssr-test.js","test:chrome":"KARMA_BROWSERS=Chrome yarn karma:run","test:headless:chrome":"KARMA_BROWSERS=ChromeHeadless yarn karma:run","test:firefox":"KARMA_BROWSERS=Firefox yarn karma:run","test:headless:firefox":"KARMA_BROWSERS=FirefoxHeadless yarn karma:run","karma:run":"karma start --singleRun","karma:watch":"karma start","prepublish":"yarn build","test:bs:modern":"yarn karma:run --useBrowserStack","test:bs:ie":"yarn karma:run --useBrowserStack --runIeTests"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,ts,md}":["prettier --write"]},"peerDependencies":{"react":">=16.8.0","react-dom":">=16.8.0"},"devDependencies":{"@babel/core":"^7.7.7","@babel/plugin-transform-runtime":"^7.9.0","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.9.4","@babel/preset-typescript":"^7.9.0","@rollup/plugin-babel":"^5.2.1","@rollup/plugin-inject":"^4.0.1","@semantic-release/changelog":"^5.0.1","@semantic-release/commit-analyzer":"^8.0.1","@semantic-release/git":"^9.0.0","@semantic-release/github":"^7.1.1","@semantic-release/npm":"^7.0.6","@semantic-release/release-notes-generator":"^9.0.1","@size-limit/preset-small-lib":"^4.4.5","@testing-library/react":"^11.0.4","@types/karma":"^5.0.0","@types/karma-jasmine":"^3.1.0","@types/react":"^16.9.34","@types/react-dom":"^16.9.6","babel-loader":"^8.1.0","delay":"^4.1.0","husky":"^4.2.5","karma":"^5.0.1","karma-browserstack-launcher":"^1.6.0","karma-chrome-launcher":"^3.0.0","karma-firefox-launcher":"^1.3.0","karma-jasmine":"^4.0.1","karma-sourcemap-loader":"^0.3.7","karma-spec-reporter":"^0.0.32","karma-webpack":"^4.0.2","lint-staged":"^10.1.3","npm-run-all":"^4.1.5","prettier":"^2.0.4","react":"^16.9.0","react-app-polyfill":"^2.0.0","react-dom":"^16.9.0","rollup":"^2.6.1","semantic-release":"^17.2.2","size-limit":"^4.4.5","typescript":"^4.0.3"},"dependencies":{"resize-observer-polyfill":"^1.5.1"},"gitHead":"97328ee1acf594656caf31fc33a75ae3a2569317","readme":"# use-resize-observer\n\n<h1 align=\"center\">\n\t<br>\n\t<img width=\"250\" src=\"https://raw.githubusercontent.com/ZeeCoder/use-resize-observer/master/media/Logo.png\" alt=\"useResizeObserver\">\n\t<br>\n    <br>\n</h1>\n\nA React hook that allows you to use a ResizeObserver to measure an element's size.\n\n[![npm version](https://badge.fury.io/js/use-resize-observer.svg)](https://npmjs.com/package/use-resize-observer)\n[![build](https://travis-ci.org/ZeeCoder/use-resize-observer.svg?branch=master)](https://travis-ci.org/ZeeCoder/use-resize-observer)\n[![BrowserStack Status](https://automate.browserstack.com/badge.svg?badge_key=bTAyOUVpa3hENUgwMkJBTVhXcytCQjREangwcTJqT0czUGhRSEZta3ZwYz0tLVRSZ1NhVkdPZ01FMithOEh5ZGxoWHc9PQ==--49d9d8ad43d557894fb270c80fd1c24107a82f51)](https://automate.browserstack.com/public-build/bTAyOUVpa3hENUgwMkJBTVhXcytCQjREangwcTJqT0czUGhRSEZta3ZwYz0tLVRSZ1NhVkdPZ01FMithOEh5ZGxoWHc9PQ==--49d9d8ad43d557894fb270c80fd1c24107a82f51)\n\n## Highlights\n\n- Written in **TypeScript**.\n- **Tiny**: [500B](.size-limit.json) (minified, gzipped) Monitored by [size-limit](https://github.com/ai/size-limit).\n- Exposes an **onResize callback** if you need more control.\n- Works with **SSR**.\n- Works with **CSS-in-JS**.\n- **Supports custom refs** in case you [had one already](#passing-in-your-own-ref).\n- **Uses RefCallback by default** To address delayed mounts and changing ref elements.\n- **Ships a polyfilled version**\n- Handles many edge cases you might not even think of.\n  (See this documentation and the test cases.)\n- [Throttle / Debounce](#throttle--debounce)\n- **Tested in real browsers** (Currently latest Chrome, Safari, Firefox and IE 11, sponsored by BrowserStack)\n\n## In Action\n\n[CodeSandbox Demo](https://codesandbox.io/s/nrp0w2r5z0)\n\n## Install\n\n```sh\nyarn add use-resize-observer --dev\n# or\nnpm install use-resize-observer --save-dev\n```\n\n## Basic Usage\n\nNote that the default builds are not polyfilled! For instructions and alternatives,\nsee the [Transpilation / Polyfilling](#transpilation--polyfilling) section.\n\n```tsx\nimport React from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\n\nconst App = () => {\n  const { ref, width = 1, height = 1 } = useResizeObserver<HTMLDivElement>();\n\n  return (\n    <div ref={ref}>\n      Size: {width}x{height}\n    </div>\n  );\n};\n```\n\nNote that \"ref\" here is a `RefCallback`, not a `RefObject`, meaning you won't be\nable to access \"ref.current\" if you need the element itself.\nTo get the raw element, either you use your own RefObject (see later in this doc)\nor you hook in the returned ref callback, like so:\n\n### Getting the raw element from the default `RefCallback`\n\n```tsx\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\n\nconst useMergedCallbackRef = (...callbacks: Function[]) => {\n  // Storing callbacks in a ref, so that we don't need to memoise them in\n  // renders when using this hook.\n  const callbacksRegistry = useRef<Function[]>(callbacks);\n\n  useEffect(() => {\n    callbacksRegistry.current = callbacks;\n  }, [...callbacks]);\n\n  return useCallback((element) => {\n    callbacksRegistry.current.forEach((callback) => callback(element));\n  }, []);\n};\n\nconst App = () => {\n  const { ref, width = 1, height = 1 } = useResizeObserver<HTMLDivElement>();\n\n  const mergedCallbackRef = useMergedCallbackRef(\n    ref,\n    (element: HTMLDivElement) => {\n      // Do whatever you want with the `element`.\n    }\n  );\n\n  return (\n    <div ref={mergedCallbackRef}>\n      Size: {width}x{height}\n    </div>\n  );\n};\n```\n\n## Passing in Your Own `ref`\n\nYou can pass in your own ref instead of using the one provided.\nThis can be useful if you already have a ref you want to measure.\n\n```ts\nconst ref = useRef<HTMLDivElement>(null);\nconst { width, height } = useResizeObserver<HTMLDivElement>({ ref });\n```\n\nYou can even reuse the same hook instance to measure different elements:\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-reusing-refs-buftd)\n\n## Measuring a raw element\n\nThere might be situations where you have an element already that you need to measure.\n`ref` now accepts elements as well, not just refs, which means that you can do this:\n\n```ts\nconst { width, height } = useResizeObserver<HTMLDivElement>({\n  ref: divElement,\n});\n```\n\n## Using a single hook to measure multiple refs\n\nThe hook reacts to ref changes, as it resolves it to an element to observe.\nThis means that you can freely change the custom `ref` option from one ref to\nanother and back, and the hook will start observing whatever is set in its options.\n\n## Opting Out of (or Delaying) ResizeObserver instantiation\n\nIn certain cases you might want to delay creating a ResizeObserver instance.\n\nYou might provide a library, that only optionally provides observation features\nbased on props, which means that while you have the hook within your component,\nyou might not want to actually initialise it.\n\nAnother example is that you might want to entirely opt out of initialising, when\nyou run some tests, where the environment does not provide the `ResizeObserver`.\n\n([See discussions](https://github.com/ZeeCoder/use-resize-observer/issues/40))\n\nYou can do one of the following depending on your needs:\n\n- Use the default `ref` RefCallback, or provide a custom ref conditionally,\n  only when needed. The hook will not create a ResizeObserver instance up until\n  there's something there to actually observe.\n- Patch the test environment, and make a polyfill available as the ResizeObserver.\n  (This assumes you don't already use the polyfilled version, which would switch\n  to the polyfill when no native implementation was available.)\n\n## The \"onResize\" callback\n\nBy the default the hook will trigger a re-render on all changes to the target\nelement's width and / or height.\n\nYou can opt out of this behaviour, by providing an `onResize` callback function,\nwhich'll simply receive the width and height of the element when it changes, so\nthat you can decide what to do with it:\n\n```tsx\nimport React from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\n\nconst App = () => {\n  // width / height will not be returned here when the onResize callback is present\n  const { ref } = useResizeObserver<HTMLDivElement>({\n    onResize: ({ width, height }) => {\n      // do something here.\n    },\n  });\n\n  return <div ref={ref} />;\n};\n```\n\nThis callback also makes it possible to implement your own hooks that report only\nwhat you need, for example:\n\n- Reporting only width or height\n- Throttle / debounce\n- Wrap in `requestAnimationFrame`\n\n## Throttle / Debounce\n\nYou might want to receive values less frequently than changes actually occur.\n\nWhile this hook does not come with its own implementation of throttling / debouncing,\nyou can use the `onResize` callback to implement your own version:\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-throttle-and-debounce-8uvsg)\n\n## Defaults (SSR)\n\nOn initial mount the ResizeObserver will take a little time to report on the\nactual size.\n\nUntil the hook receives the first measurement, it returns `undefined` for width\nand height by default.\n\nYou can override this behaviour, which could be useful for SSR as well.\n\n```ts\nconst { ref, width = 100, height = 50 } = useResizeObserver<HTMLDivElement>();\n```\n\nHere \"width\" and \"height\" will be 100 and 50 respectively, until the\nResizeObserver kicks in and reports the actual size.\n\n## Without Defaults\n\nIf you only want real measurements (only values from the ResizeObserver without\nany default values), then you can just leave defaults off:\n\n```ts\nconst { ref, width, height } = useResizeObserver<HTMLDivElement>();\n```\n\nHere \"width\" and \"height\" will be undefined until the ResizeObserver takes its\nfirst measurement.\n\n## Container/Element Query with CSS-in-JS\n\nIt's possible to apply styles conditionally based on the width / height of an\nelement using a CSS-in-JS solution, which is the basic idea behind\ncontainer/element queries:\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-container-query-with-css-in-js-iitxl)\n\n## Transpilation / Polyfilling\n\nBy default the library provides transpiled ES5 modules in CJS / ESM module formats.\n\nPolyfilling is recommended to be done in the host app, and not within imported\nlibraries, as that way consumers have control over the exact polyfills being used.\n\nThat said, there's a [polyfilled](https://github.com/que-etc/resize-observer-polyfill)\nCJS module that can be used for convenience (Not affecting globals):\n\n```js\nimport useResizeObserver from \"use-resize-observer/polyfilled\";\n```\n\n## Related\n\n- [@zeecoder/container-query](https://github.com/ZeeCoder/container-query)\n- [@zeecoder/react-resize-observer](https://github.com/ZeeCoder/react-resize-observer)\n\n## License\n\nMIT\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@7.0.0-alpha.4","_nodeVersion":"12.19.0","_npmVersion":"6.14.8","dist":{"integrity":"sha512-oO9l1oNAilYtYZ25z23LgnUuVititnT0eDagKPSJEkivbh6gXfxVt4faE6PcTZ7SxXEVpnCOZlGci0cVsl/jfw==","shasum":"1f3b394cfd54ed3cae53350ac0b41e4c2723ec02","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-7.0.0-alpha.4.tgz","fileCount":11,"unpackedSize":37554,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfrEyECRA9TVsSAnZWagAAgHMP/0/Ys2veAApyx+DFRVaA\nu5HZD+Ch/s/ZMICxLFJYHKIwnec6DTx6a1LQj3CcP/f8IutfRRs4lqNk7vXK\nNOO9zvotlrrp674WU019tI8E/0BK22CJqy2yT3KPnN8jC5oEAbnP1vx4A5Oi\noABnh9KNO7YoE5yl7F/8USB0Vs+PNrQ3DM6bnNIW/BKA85JJ/qIdWd9xl4wL\nOu62hCxF/ONJIEID9RSHyuxjiXWvuGvb1vyUA/tX5+x3HeTVewH/Jgu1Y75w\njQJcfa4ZxtliuWuv8z/TTwiv9HCn9rVrpxqZdOpDhRGBjlssMrPR6KkEyDgy\nXlK6gUJ+Gz1x085QPIyoAIimg0g0kXWY+lbnj5w0nbKZIKCfZnvyfqdz/51t\nbeOZmFqgiH9QyWJJh0ddZ7gd+KGwSxdleT7T56rQoD4vN0256gH0/VbfxXHA\n2ZENOihJY8uFgS+JB5QxDvRMWHbPhT3OXruFA+CZqS7qjDpjXJ895Dd7eO+T\n94Pfa2c0cYKxQ7rCOEH27HicTRG3qsefskN4fKJDgu2Jyd0UEXvQIQ72qBiF\nc4LDX4Z89IUQrwgimNP2EDYJdstxPRjI+nhZjIOEWhFLbp/h5gNeoGWKKuw5\nOYpkDclomZ9qQxj8AOxHwuD/fxOqcj29WiqOV3HtbD/KX2+stuJ/hX7NC5xY\nW2b6\r\n=Qkwr\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDh2rGa55MLM+Ooo2gQry2C0kFQfj/JYDRk+idcwA6EuAIgatZ8CrTwpuAT/iOnzMETGPNzHOmj9ixSW8HHZqzzR0g="}]},"_npmUser":{"name":"zeecoder","email":"contact@hubertviktor.com"},"directories":{},"maintainers":[{"name":"zeecoder","email":"contact@hubertviktor.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_7.0.0-alpha.4_1605127299776_0.8151108815369359"},"_hasShrinkwrap":false},"7.0.0":{"name":"use-resize-observer","version":"7.0.0","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","types":"dist/index.d.ts","sideEffects":false,"repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"contact@hubertviktor.com"},"license":"MIT","scripts":{"build":"rollup -c && tsc && cp dist/index.d.ts polyfilled.d.ts","watch":"KARMA_BROWSERS=Chrome run-p 'src:watch' 'karma:watch'","src:watch":"rollup -c -w","check:size":"size-limit","check:types":"tsc -p tests","test":"run-s 'build' 'check:size' 'check:types' 'test:create:ssr' 'test:bs:*'","test:create:ssr":"node ./tests/ssr/create-ssr-test.js","test:chrome":"KARMA_BROWSERS=Chrome yarn karma:run","test:headless:chrome":"KARMA_BROWSERS=ChromeHeadless yarn karma:run","test:firefox":"KARMA_BROWSERS=Firefox yarn karma:run","test:headless:firefox":"KARMA_BROWSERS=FirefoxHeadless yarn karma:run","karma:run":"karma start --singleRun","karma:watch":"karma start","prepublish":"yarn build","test:bs:modern":"yarn karma:run --useBrowserStack","test:bs:ie":"yarn karma:run --useBrowserStack --runIeTests"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,ts,md}":["prettier --write"]},"peerDependencies":{"react":">=16.8.0","react-dom":">=16.8.0"},"devDependencies":{"@babel/core":"^7.7.7","@babel/plugin-transform-runtime":"^7.9.0","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.9.4","@babel/preset-typescript":"^7.9.0","@rollup/plugin-babel":"^5.2.1","@rollup/plugin-inject":"^4.0.1","@semantic-release/changelog":"^5.0.1","@semantic-release/commit-analyzer":"^8.0.1","@semantic-release/git":"^9.0.0","@semantic-release/github":"^7.1.1","@semantic-release/npm":"^7.0.6","@semantic-release/release-notes-generator":"^9.0.1","@size-limit/preset-small-lib":"^4.4.5","@testing-library/react":"^11.0.4","@types/karma":"^5.0.0","@types/karma-jasmine":"^3.1.0","@types/react":"^16.9.34","@types/react-dom":"^16.9.6","babel-loader":"^8.1.0","delay":"^4.1.0","husky":"^4.2.5","karma":"^5.0.1","karma-browserstack-launcher":"^1.6.0","karma-chrome-launcher":"^3.0.0","karma-firefox-launcher":"^1.3.0","karma-jasmine":"^4.0.1","karma-sourcemap-loader":"^0.3.7","karma-spec-reporter":"^0.0.32","karma-webpack":"^4.0.2","lint-staged":"^10.1.3","npm-run-all":"^4.1.5","prettier":"^2.0.4","react":"^16.9.0","react-app-polyfill":"^2.0.0","react-dom":"^16.9.0","rollup":"^2.6.1","semantic-release":"^17.2.2","size-limit":"^4.4.5","typescript":"^4.0.3"},"dependencies":{"resize-observer-polyfill":"^1.5.1"},"gitHead":"809e36e3c15e2a67257fe6d6cb887a1b35bbb0a1","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@7.0.0","_nodeVersion":"12.19.0","_npmVersion":"6.14.8","dist":{"integrity":"sha512-+RjrQsk/mL8aKy4TGBDiPkUv6whyeoGDMIZYk0gOGHOlnrsjImC+jG6lfAFcBCKAG9epGRL419adhDNdkDCQkA==","shasum":"15f0efbd5a4e08a8cc51901f21a89ba836f2116e","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-7.0.0.tgz","fileCount":11,"unpackedSize":38374,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfrFBOCRA9TVsSAnZWagAAcQwP/j1oTl39I2SDaqWQ1jjR\nVD8EEPJCQmUrMcNYLfWbnAlczNualcW+ERXnoxRLgfjJ4c+6A+FvNwDUr8uS\nOgnHA6xU/TtKrtzyZ+vWfri32DY4IkFgeIvtZijbTZVKhm+pa/cvh0K3vvLL\nfNXyG1t5uomXMmiTsnUTyoHde6cO608iSbkoq6yan/KESH9PTOs5MhO9USDP\ntoVN5MhA8/kVXwxyGSAtqbVQjOERefa9+PnIjuKqmE1sCyLA3rO6veDf2hfD\nCb5Dr6zUlFbxprwuoS3OHU3Q1TtQrzB4lg9aiOPl2UGG5dCzZNxBJE4Tfntj\nci+2kAhfOkw44EARqXpcB+6egWIGciRqbcATQuSqG/l8jlF6n/dH3R/Kg55X\nhzVWRKX6QjVii0ayW84CNxDodRGr7/OFwiwwqeNJptPl0E57F7biZ84E+05n\np/oXzCKEowN8aUp96v4H8TZ1dEbzAKd1/26I1szWOiXfmVx3gQfIdozKs6By\nwkshSVb7wHMbilKOmScpFuQ5w9UM/ILRFY483oZAfBGapJzdXdph68fx2Rnu\nQz3EbqkFEdeUZnI1sj7MhsStmAiK0DYH0dJ+xLtvfesvnY9Lm0+fn1Bna6C9\niyrUW/+FEvXI9u0wFCunJVNIAKyo+OwXhvD9AhEwJ9OrmbS9ZQvAuGNBU6em\n8enM\r\n=4NL8\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBwxFPbfWgeOetQcqX1XFF6tH2SISxk/uVdmGUneUN7iAiA2biqFu4rz9K4a5d7BCXMc+FvLeNJn9IRsDicfVtCPog=="}]},"_npmUser":{"name":"zeecoder","email":"contact@hubertviktor.com"},"directories":{},"maintainers":[{"name":"zeecoder","email":"contact@hubertviktor.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_7.0.0_1605128269653_0.454210900194997"},"_hasShrinkwrap":false},"7.0.1":{"name":"use-resize-observer","version":"7.0.1","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","types":"dist/index.d.ts","sideEffects":false,"repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"contact@hubertviktor.com"},"license":"MIT","keywords":["react","hook","react hook","resize observer","resize observer hook","resize observer react hook","use-resize-observer","useresizeobserver","resize hook","size hook","container query","css in js","measure","size","resize"],"scripts":{"build":"rollup -c && tsc && cp dist/index.d.ts polyfilled.d.ts","watch":"KARMA_BROWSERS=Chrome run-p 'src:watch' 'karma:watch'","src:watch":"rollup -c -w","check:size":"size-limit","check:types":"tsc -p tests","test":"run-s 'build' 'check:size' 'check:types' 'test:create:ssr' 'test:bs:*'","test:create:ssr":"node ./tests/ssr/create-ssr-test.js","test:chrome":"KARMA_BROWSERS=Chrome yarn karma:run","test:headless:chrome":"KARMA_BROWSERS=ChromeHeadless yarn karma:run","test:firefox":"KARMA_BROWSERS=Firefox yarn karma:run","test:headless:firefox":"KARMA_BROWSERS=FirefoxHeadless yarn karma:run","karma:run":"karma start --singleRun","karma:watch":"karma start","prepublish":"yarn build","test:bs:modern":"yarn karma:run --useBrowserStack","test:bs:ie":"yarn karma:run --useBrowserStack --runIeTests"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"*.{js,ts,md}":["prettier --write"]},"peerDependencies":{"react":">=16.8.0","react-dom":">=16.8.0"},"devDependencies":{"@babel/core":"^7.7.7","@babel/plugin-transform-runtime":"^7.9.0","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.9.4","@babel/preset-typescript":"^7.9.0","@rollup/plugin-babel":"^5.2.1","@rollup/plugin-inject":"^4.0.1","@semantic-release/changelog":"^5.0.1","@semantic-release/commit-analyzer":"^8.0.1","@semantic-release/git":"^9.0.0","@semantic-release/github":"^7.1.1","@semantic-release/npm":"^7.0.6","@semantic-release/release-notes-generator":"^9.0.1","@size-limit/preset-small-lib":"^4.4.5","@testing-library/react":"^11.0.4","@types/karma":"^5.0.0","@types/karma-jasmine":"^3.1.0","@types/react":"^16.9.34","@types/react-dom":"^16.9.6","babel-loader":"^8.1.0","delay":"^4.1.0","husky":"^4.2.5","karma":"^5.0.1","karma-browserstack-launcher":"^1.6.0","karma-chrome-launcher":"^3.0.0","karma-firefox-launcher":"^1.3.0","karma-jasmine":"^4.0.1","karma-sourcemap-loader":"^0.3.7","karma-spec-reporter":"^0.0.32","karma-webpack":"^4.0.2","lint-staged":"^10.1.3","npm-run-all":"^4.1.5","prettier":"^2.0.4","react":"^16.9.0","react-app-polyfill":"^2.0.0","react-dom":"^16.9.0","rollup":"^2.6.1","semantic-release":"^17.2.2","size-limit":"^4.4.5","typescript":"^4.0.3"},"dependencies":{"resize-observer-polyfill":"^1.5.1"},"gitHead":"2906203c610392426f74604081b8c45f43ba1367","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@7.0.1","_nodeVersion":"12.22.3","_npmVersion":"6.14.8","dist":{"integrity":"sha512-tJESENDoVXfzkv1Cl9dJ13ySgENcKjvEKSU7QwjckjxjXg/MV2zW1CjEUtLpmXY084womIxJROUR3L1SuqlvOw==","shasum":"82b13d462e7fb5e3ec953bde48d6e02b9aae660d","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-7.0.1.tgz","fileCount":11,"unpackedSize":38379,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhAHsSCRA9TVsSAnZWagAAobkP+wbCNbROP24DL+GbFq2U\nnBtuS3hu6VWluuXmniHLnxlyJzxpBgOZWyXw18QmIkzVJghyojjywjTCLwuf\nQCGHB5nTmmNQhwJ4yQzM32bq+s6P73WsytBPMQA971C28o9BEYmbkOgsDX7e\nFjlViq63lBn5KXdEyuGp5GFoniuFFb5IJdMX2c1jM+2wAl6ehAYi6EdX/7fX\nI5VAOa3WzZx5h+31AAT1yL9J7qGKGNmKp4EOW07JCGTtuGw9D3Tzzebt3sKL\nFBCRDEL7WTq3MJfoor0CqGDaQmtQa9QpAR9rUvEIxBwjAu3HMRV0FvKzL/ZM\npGqQDC/LAQOU7GcI2HAZjC87lzZ5lYHOSLL8Mbld3SCsZxC47LxihBwfrCWy\n4cP4ZEFXj6GKScV5207OUiKJbxDYs7FM4dVHThJXuMuRAjG5bFIVOJM8ff7G\naX4/lXWJdYGCNIpS1rXh06f1Sq8Uf1guHio1W4CjoOHhiDutt/MhzNAEvSEt\nNDnl4y9ZdGGtKtQfd445LpE28GlvoZ85ctez34E9zAjvxtgFHa5bgmtJa6zH\nOpSClB1EC1DgGA5khk+3wYZAikLttHv6qlCzwX5wuXq8fNKisbHOIxKRebgu\nnugPKjfX2C4Bx/+1lFCH02no9leb7NfvqOUZ2fLJ4w9h7bnoOKjo59PhpqmH\nUn6a\r\n=xHdq\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCJxjc4Tzh5GZgOM8bJ6yq2q4R+nmEZMqhDdECxIIXoiAIhALmWnWx0GE3RiA21/8fHrb94RogUd5iXLvNV4/zEEnWT"}]},"_npmUser":{"name":"zeecoder","email":"contact@hubertviktor.com"},"directories":{},"maintainers":[{"name":"zeecoder","email":"contact@hubertviktor.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_7.0.1_1627421458765_0.37713954413150264"},"_hasShrinkwrap":false},"7.1.0":{"name":"use-resize-observer","version":"7.1.0","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","types":"dist/index.d.ts","sideEffects":false,"repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"contact@hubertviktor.com"},"license":"MIT","keywords":["react","hook","react hook","resize observer","resize observer hook","resize observer react hook","use-resize-observer","useresizeobserver","resize hook","size hook","container query","css in js","measure","size","resize"],"scripts":{"build":"rollup -c && tsc && cp dist/index.d.ts polyfilled.d.ts","watch":"KARMA_BROWSERS=Chrome run-p 'src:watch' 'karma:watch'","src:watch":"rollup -c -w","check:size":"size-limit","check:types":"tsc -p tests","test":"run-s 'build' 'check:size' 'check:types' 'test:create:ssr' 'test:headless:chrome'","test:create:ssr":"node ./tests/ssr/create-ssr-test.js","test:chrome":"KARMA_BROWSERS=Chrome yarn karma:run","test:headless:chrome":"KARMA_BROWSERS=ChromeHeadless yarn karma:run","test:firefox":"KARMA_BROWSERS=Firefox yarn karma:run","test:headless:firefox":"KARMA_BROWSERS=FirefoxHeadless yarn karma:run","karma:run":"karma start --singleRun","karma:watch":"KARMA_BROWSERS=Chrome karma start","prepublish":"yarn build","test:bs:all":"run-s 'test:bs:modern' 'test:bs:legacy'","test:bs:modern":"KARMA_BROWSERS=modern yarn karma:run","test:bs:legacy":"KARMA_BROWSERS=legacy yarn karma:run","test:bs:chrome":"KARMA_BROWSERS=bs_chrome_latest yarn karma:run","test:bs:firefox":"KARMA_BROWSERS=bs_firefox_latest yarn karma:run","test:bs:safari":"KARMA_BROWSERS=bs_safari_13 yarn karma:run","test:bs:edge":"KARMA_BROWSERS=bs_edge_latest yarn karma:run","test:bs:opera":"KARMA_BROWSERS=bs_opera_latest yarn karma:run","test:bs:ie":"KARMA_BROWSERS=bs_ie_11 yarn karma:run","test:bs:ios_11":"KARMA_BROWSERS=bs_ios_11 yarn karma:run","test:bs:ios_14":"KARMA_BROWSERS=bs_ios_14 yarn karma:run","test:bs:samsung":"KARMA_BROWSERS=bs_samsung yarn karma:run","prepare":"husky install"},"lint-staged":{"*.{js,ts,md}":["prettier --write"]},"peerDependencies":{"react":">=16.8.0","react-dom":">=16.8.0"},"devDependencies":{"@babel/core":"^7.7.7","@babel/plugin-transform-runtime":"^7.9.0","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.9.4","@babel/preset-typescript":"^7.9.0","@rollup/plugin-babel":"^5.2.1","@rollup/plugin-inject":"^4.0.1","@semantic-release/changelog":"^5.0.1","@semantic-release/commit-analyzer":"^8.0.1","@semantic-release/git":"^9.0.0","@semantic-release/github":"^7.1.1","@semantic-release/npm":"^7.0.6","@semantic-release/release-notes-generator":"^9.0.1","@size-limit/preset-small-lib":"^5.0.1","@testing-library/react":"^12.0.0","@types/karma":"^6.3.1","@types/karma-jasmine":"^4.0.1","@types/react":"^17.0.15","@types/react-dom":"^17.0.9","babel-loader":"^8.1.0","delay":"^5.0.0","husky":"^7.0.0","karma":"^6.3.4","karma-browserstack-launcher":"^1.6.0","karma-chrome-launcher":"^3.0.0","karma-firefox-launcher":"^2.1.1","karma-jasmine":"^4.0.1","karma-sourcemap-loader":"^0.3.7","karma-spec-reporter":"^0.0.32","karma-webpack":"^5.0.0","lint-staged":"^11.1.1","npm-run-all":"^4.1.5","prettier":"^2.0.4","react":"^17.0.2","react-app-polyfill":"^2.0.0","react-dom":"^17.0.2","rollup":"^2.6.1","semantic-release":"^17.2.2","size-limit":"^5.0.1","typescript":"^4.3.5","webpack":"~4"},"dependencies":{"@juggle/resize-observer":"^3.3.1"},"gitHead":"7bd071a6d5d6b3da8419439080425a54f8b8d27b","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@7.1.0","_nodeVersion":"12.22.5","_npmVersion":"7.21.1","dist":{"integrity":"sha512-6DGWOnZpjAGP/MtslGg7OunZptyueQduMi0i8DC5nVKXtJ8Bdt0wR/1tSxugFRndzYCi/jtD+SlNs5PK8ijvXQ==","shasum":"709ea7540fbe0a60ceae41ee2bef933d7782e4d4","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-7.1.0.tgz","fileCount":11,"unpackedSize":57813,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhKogZCRA9TVsSAnZWagAAw9MP/0WemYGZYxOz/LdfR7Hw\nXsXvlxOwCNp9S24wiDC1mHXpSGg+7R4ORq04T95McdmPiDPhrcEhJ7ufbiU0\ndTMlxOZpg7s7Qxqn+Y/KSr73pgB/dZTQ0uagrJ4mNso1bd57Idch4PRtnOTk\n6ESNG0DihQ9SF06rrya5vZHFYYl3JEQCSB4J/9owEFmbSS1s+XOmG1ZRbXXB\n2oOrLaC7yzgdHFKKNRkEyOCQrnNsqjY5e69sQ4mcj6wt+Wy28nzADXkmWTH5\nHbkP7B9u8Vod2ePtP68kcSXnCKofTs/BxB1bxPjx/e4T1j4/OEPdYbbYazXy\nRg+O4z9+UFW+/cOoJ9xDKyvteG3MPNYOx4nE8y2SFzCJTFdRpNIlT6H+QfCc\nPj2TOjJfeeitjOGD6ky7aL6waO5nwr2mPv5AiNv0W75P+LUadGvA2YT64sBh\naE2SVPAdZn/uX9CtANnhXwizt8eDitjnCjO8ziPeamHIKKMh4B/++Pn1KXN+\nbn974P+fUXtS88NqlJd0klk/+/PNLsycFnhi3hQXjiX/QsNO22RASKLrWLnP\n0VRz3EQkM7BCU3IQn1S0NAqNeJvJFLEtgOCu4ipOiqgwmit9lXF/zO9pfl1F\nZmZYkSA2AjEJwhndrMc2Jf+2NAFCxIcUPvsb5yi39lzc/MDzfbtTY05AEpvP\nm9aS\r\n=PxEX\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDL4i8J5Veuaf5nj/QNi2bw1aYj22a3i4ZNsNn6O6zxcQIgLkB3Xcf3/sskrWphEWUfBunteD6K2RXP78ofDuO8sTM="}]},"_npmUser":{"name":"zeecoder","email":"contact@hubertviktor.com"},"directories":{},"maintainers":[{"name":"zeecoder","email":"contact@hubertviktor.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_7.1.0_1630177305658_0.32110428098688826"},"_hasShrinkwrap":false,"deprecated":"This version was an accidental release, which should've been v8. Please see the release notes for possible breaking changes related to the polyfilled version."},"8.0.0":{"name":"use-resize-observer","version":"8.0.0","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","types":"dist/index.d.ts","sideEffects":false,"repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"contact@hubertviktor.com"},"license":"MIT","keywords":["react","hook","react hook","resize observer","resize observer hook","resize observer react hook","use-resize-observer","useresizeobserver","resize hook","size hook","container query","css in js","measure","size","resize"],"scripts":{"build":"rollup -c && tsc && cp dist/index.d.ts polyfilled.d.ts","watch":"KARMA_BROWSERS=Chrome run-p 'src:watch' 'karma:watch'","src:watch":"rollup -c -w","check:size":"size-limit","check:types":"tsc -p tests","test":"run-s 'build' 'check:size' 'check:types' 'test:create:ssr' 'test:headless:chrome'","test:create:ssr":"node ./tests/ssr/create-ssr-test.js","test:chrome":"KARMA_BROWSERS=Chrome yarn karma:run","test:headless:chrome":"KARMA_BROWSERS=ChromeHeadless yarn karma:run","test:firefox":"KARMA_BROWSERS=Firefox yarn karma:run","test:headless:firefox":"KARMA_BROWSERS=FirefoxHeadless yarn karma:run","karma:run":"karma start --singleRun","karma:watch":"KARMA_BROWSERS=Chrome karma start","prepublish":"yarn build","test:bs:all":"run-s 'test:bs:modern' 'test:bs:legacy'","test:bs:modern":"KARMA_BROWSERS=modern yarn karma:run","test:bs:legacy":"KARMA_BROWSERS=legacy yarn karma:run","test:bs:chrome":"KARMA_BROWSERS=bs_chrome_latest yarn karma:run","test:bs:firefox":"KARMA_BROWSERS=bs_firefox_latest yarn karma:run","test:bs:safari":"KARMA_BROWSERS=bs_safari_13 yarn karma:run","test:bs:edge":"KARMA_BROWSERS=bs_edge_latest yarn karma:run","test:bs:opera":"KARMA_BROWSERS=bs_opera_latest yarn karma:run","test:bs:ie":"KARMA_BROWSERS=bs_ie_11 yarn karma:run","test:bs:ios_11":"KARMA_BROWSERS=bs_ios_11 yarn karma:run","test:bs:ios_14":"KARMA_BROWSERS=bs_ios_14 yarn karma:run","test:bs:samsung":"KARMA_BROWSERS=bs_samsung yarn karma:run","prepare":"husky install"},"lint-staged":{"*.{js,ts,md}":["prettier --write"]},"peerDependencies":{"react":">=16.8.0","react-dom":">=16.8.0"},"devDependencies":{"@babel/core":"^7.7.7","@babel/plugin-transform-runtime":"^7.9.0","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.9.4","@babel/preset-typescript":"^7.9.0","@rollup/plugin-babel":"^5.2.1","@rollup/plugin-inject":"^4.0.1","@semantic-release/changelog":"^5.0.1","@semantic-release/commit-analyzer":"^8.0.1","@semantic-release/git":"^9.0.0","@semantic-release/github":"^7.1.1","@semantic-release/npm":"^7.0.6","@semantic-release/release-notes-generator":"^9.0.1","@size-limit/preset-small-lib":"^5.0.1","@testing-library/react":"^12.0.0","@types/karma":"^6.3.1","@types/karma-jasmine":"^4.0.1","@types/react":"^17.0.15","@types/react-dom":"^17.0.9","babel-loader":"^8.1.0","delay":"^5.0.0","husky":"^7.0.0","karma":"^6.3.4","karma-browserstack-launcher":"^1.6.0","karma-chrome-launcher":"^3.0.0","karma-firefox-launcher":"^2.1.1","karma-jasmine":"^4.0.1","karma-sourcemap-loader":"^0.3.7","karma-spec-reporter":"^0.0.32","karma-webpack":"^5.0.0","lint-staged":"^11.1.1","npm-run-all":"^4.1.5","prettier":"^2.0.4","react":"^17.0.2","react-app-polyfill":"^2.0.0","react-dom":"^17.0.2","rollup":"^2.6.1","semantic-release":"^17.2.2","size-limit":"^5.0.1","typescript":"^4.3.5","webpack":"~4"},"dependencies":{"@juggle/resize-observer":"^3.3.1"},"gitHead":"5b424126df7eaf002dcc5a5ad7ce3372d91b1a49","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@8.0.0","_nodeVersion":"12.22.5","_npmVersion":"7.21.1","dist":{"integrity":"sha512-n0iKSeiQpJCyaFh5JA0qsVLBIovsF4EIIR1G6XiBwKJN66ZrD4Oj62bjcuTAATPKiSp6an/2UZZxCf/67fk3sQ==","shasum":"69bd80c1ddd94f3758563fe107efb25fed85067a","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-8.0.0.tgz","fileCount":11,"unpackedSize":59160,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhKqgnCRA9TVsSAnZWagAAX2IP/RMHiGfMYvlObdRjwqao\nbt+P+7ICiVk/9tijuQC8bGQZAQvF4Pj/m9Hr6qOyA5r7OmUubRz3RR7B2A5l\nodi92GtuG/Ch8/iTuKkPv3IAVMhCZ4MsovQbZ8sEpFfX5+DbScsn8RZ2NKF5\nf16wQWvweoPPemTxfTgXxof1JAX5/fhk7grmV0vDMSMCGC4IxgHbBnxXMk+P\nmuBLhpAWGvIkKEHyzrDRV0+Gn6gtpaK/PaxXZvwfNcuyhj8FuMFsnvwrSoW6\nic+V3xG2g3J1MxE21Bu3dfTK6rF43rGUyLaq3jrnnTVPjSErrC2Fg7jLBnWN\niVXzcX2h8LwN/NbZ1I15/U1h7DEh6o1f6806EsOtx9B101EghZYZCL/2Vc8x\neF2AcGt3H/1fh2jIMyCLIQ6NwP/VdShtmCMjY5Q1TaYtwzEUK/5lDy5u+x21\nweXBTb3rqXbUPq2GSC4MSHc+bEe2tN8fNVPUo3owe4YPqYarBZ7wD9Cu1s9G\nokM0/df7W6L9f5ue9/fldCPRVhIZTppriCouvb5apETNfsvoohpJRm/zvc7W\nWlJ4bJjOtJeE3i8FBmtL8mf0AImaTExgTSgCdWhp4lwQ1OBpCDsyQJwRQ8Qm\nprkXpn/p2hul78nN+1PvCCLKdRuiR/kMFje8wdNSTjG2E+/Vg1mDOrdGL/v+\nzcjc\r\n=VB/P\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDPMUu3t9J/f4r4l7MnUWhV95FXpWYpNIVOVHz/AdBt+gIgMGsE/mzlhB2T5514tf3d3mQYDydlmXnjNk6I7wZa+wE="}]},"_npmUser":{"name":"zeecoder","email":"contact@hubertviktor.com"},"directories":{},"maintainers":[{"name":"zeecoder","email":"contact@hubertviktor.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_8.0.0_1630185511352_0.6517495146824959"},"_hasShrinkwrap":false},"9.0.0":{"name":"use-resize-observer","version":"9.0.0","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","types":"dist/index.d.ts","sideEffects":false,"repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"contact@hubertviktor.com"},"license":"MIT","keywords":["react","hook","react hook","resize observer","resize observer hook","resize observer react hook","use-resize-observer","useresizeobserver","resize hook","size hook","container query","css in js","measure","size","resize"],"scripts":{"build":"rollup -c && tsc && cp dist/index.d.ts polyfilled.d.ts","watch":"KARMA_BROWSERS=Chrome run-p 'src:watch' 'karma:watch'","src:watch":"rollup -c -w","check:size":"size-limit","check:types":"tsc -p tests","test":"run-s 'build' 'check:size' 'check:types' 'test:create:ssr' 'test:headless:chrome'","test:create:ssr":"node ./tests/ssr/create-ssr-test.js","test:chrome":"KARMA_BROWSERS=Chrome yarn karma:run","test:headless:chrome":"KARMA_BROWSERS=ChromeHeadless yarn karma:run","test:firefox":"KARMA_BROWSERS=Firefox yarn karma:run","test:headless:firefox":"KARMA_BROWSERS=FirefoxHeadless yarn karma:run","karma:run":"karma start --singleRun","karma:watch":"KARMA_BROWSERS=Chrome karma start","prepublish":"yarn build","test:bs:all":"run-s 'test:bs:modern' 'test:bs:legacy'","test:bs:modern":"KARMA_BROWSERS=modern yarn karma:run","test:bs:legacy":"KARMA_BROWSERS=legacy yarn karma:run","test:bs:chrome":"KARMA_BROWSERS=bs_chrome_latest yarn karma:run","test:bs:firefox":"KARMA_BROWSERS=bs_firefox_latest yarn karma:run","test:bs:safari":"KARMA_BROWSERS=bs_safari_13 yarn karma:run","test:bs:edge":"KARMA_BROWSERS=bs_edge_latest yarn karma:run","test:bs:opera":"KARMA_BROWSERS=bs_opera_latest yarn karma:run","test:bs:ie":"KARMA_BROWSERS=bs_ie_11 yarn karma:run","test:bs:ios_11":"KARMA_BROWSERS=bs_ios_11 yarn karma:run","test:bs:ios_14":"KARMA_BROWSERS=bs_ios_14 yarn karma:run","test:bs:samsung":"KARMA_BROWSERS=bs_samsung yarn karma:run","prepare":"husky install"},"lint-staged":{"*.{js,ts,md}":["prettier --write"]},"peerDependencies":{"react":"16.8.0 - 18","react-dom":"16.8.0 - 18"},"devDependencies":{"@babel/core":"^7.7.7","@babel/plugin-transform-runtime":"^7.9.0","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.9.4","@babel/preset-typescript":"^7.9.0","@rollup/plugin-babel":"^5.2.1","@rollup/plugin-inject":"^4.0.1","@semantic-release/changelog":"^5.0.1","@semantic-release/commit-analyzer":"^8.0.1","@semantic-release/git":"^9.0.0","@semantic-release/github":"^7.1.1","@semantic-release/npm":"^7.0.6","@semantic-release/release-notes-generator":"^9.0.1","@size-limit/preset-small-lib":"^5.0.1","@testing-library/react":"^13.1.1","@types/karma":"^6.3.1","@types/karma-jasmine":"^4.0.1","@types/react":"^18.0.8","@types/react-dom":"^18.0.3","babel-loader":"^8.1.0","delay":"^5.0.0","husky":"^7.0.0","karma":"^6.3.4","karma-browserstack-launcher":"^1.6.0","karma-chrome-launcher":"^3.0.0","karma-firefox-launcher":"^2.1.1","karma-jasmine":"^4.0.1","karma-sourcemap-loader":"^0.3.7","karma-spec-reporter":"^0.0.32","karma-webpack":"^5.0.0","lint-staged":"^11.1.1","npm-run-all":"^4.1.5","prettier":"^2.0.4","react":"^18.0.0","react-app-polyfill":"^2.0.0","react-dom":"^18.0.0","rollup":"^2.6.1","semantic-release":"^17.2.2","size-limit":"^5.0.1","typescript":"^4.3.5","webpack":"~4"},"dependencies":{"@juggle/resize-observer":"^3.3.1"},"gitHead":"2c2fa9e1e6e80b823992fd47c9fd04a0657c1312","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@9.0.0","_nodeVersion":"12.22.12","_npmVersion":"7.21.1","dist":{"integrity":"sha512-13r/1XeyfPkeegiVZYLDoQbkwbVMzj1XghqNz9HFqiRevtXCWDQTsqzVjQ4WNM4rJ8P3sFYc+3TgX0J2Jsuxfw==","shasum":"9708c6fa432f35979b1d6e732b6f4cffde3d11e5","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-9.0.0.tgz","fileCount":11,"unpackedSize":59425,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHLDfccm9zfIpjT8rAL5ESKVdR2mEyYnOkWQl9wKl+j0AiAkFOwV8W0xOXkBqWQXHSQBCTRZsT8DakXz5j7+uJfenw=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJigXwdACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrY/g//a4lrE/Gu/25pzzPtsWwqg10G57GZEStosubESJmpC950u7sI\r\nBtUvz4ourSvy9tFgRIhQkrpuViRcmYIUJZHaRzVXWXVVypWk/KD46wqRcDdh\r\nnevjMLm2z8/DYTMlw0tzP8ITw3o05qFFnwmr0KkJzoOJxTUsxGl9zdemk3zU\r\nOXCtW5UIBGL55Z8745BbIcRICblDFvopEXL5mdotxcuYpzLM9f0lo+7uU5jJ\r\nsoS4hTbdGW9uws7okByG8ax+R9c3b4YXi7k62RZj7/8wCZg3ujqigv9ubwnx\r\nZK7hHkIeOqBoUXFbT7waO5M3ACO+P+pBCQISqdc/TfrKa84t7k4BP6e7IlDS\r\nwvZSieF3M/3JonS2ypfPxHFWhotIKbXbYL+mEgolr/eSlxYcLkplW2n+NQy8\r\nliUv4yHcnEwgnj4Bm+LcOLiLPU31cgV5GafgeL3jcerrplxNXzJYKf+bJVGS\r\nLonJe6cDwzi7syxPT0B2V2bEBKpUsczdb3Oih5CHdhQlq9GgFnMAiNOalW3Y\r\nQenTdgkCA4U9CuaqgTrjHPGotLqAbNHT4Zn6ieDSg8D16HAAmrBsPT+GKWy1\r\nEgeLfAagi9zMd9rBCjn7clwv2qDYQhSSrKXcRF0d3GpJx1lPX3ZOHgtwv9o4\r\nbsFTVuLBhR1ZOGSnYLTnzEh5k43EIAuGASA=\r\n=W+Ma\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"zeecoder","email":"contact@hubertviktor.com"},"directories":{},"maintainers":[{"name":"zeecoder","email":"contact@hubertviktor.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_9.0.0_1652653085749_0.9085373673123716"},"_hasShrinkwrap":false},"9.0.2":{"name":"use-resize-observer","version":"9.0.2","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","types":"dist/index.d.ts","sideEffects":false,"repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"contact@hubertviktor.com"},"license":"MIT","keywords":["react","hook","react hook","resize observer","resize observer hook","resize observer react hook","use-resize-observer","useresizeobserver","resize hook","size hook","container query","css in js","measure","size","resize"],"scripts":{"build":"rollup -c && tsc && rm -rf dist/utils && cp dist/index.d.ts polyfilled.d.ts","watch":"KARMA_BROWSERS=Chrome run-p 'src:watch' 'karma:watch'","src:watch":"rollup -c -w","check:size":"size-limit","check:types":"tsc -p tests","check:lint":"eslint src/**","test":"run-s 'build' 'check:size' 'check:types' 'check:lint' 'test:unit' 'test:create:ssr' 'test:headless:chrome'","test:unit":"jest","test:create:ssr":"node ./tests/ssr/create-ssr-test.js","test:chrome":"KARMA_BROWSERS=Chrome yarn karma:run","test:headless:chrome":"KARMA_BROWSERS=ChromeHeadless yarn karma:run","test:firefox":"KARMA_BROWSERS=Firefox yarn karma:run","test:headless:firefox":"KARMA_BROWSERS=FirefoxHeadless yarn karma:run","karma:run":"karma start --singleRun","karma:watch":"KARMA_BROWSERS=Chrome karma start","prepublish":"yarn build","test:bs:all":"run-s 'test:bs:modern' 'test:bs:legacy'","test:bs:modern":"KARMA_BROWSERS=modern yarn karma:run","test:bs:legacy":"KARMA_BROWSERS=legacy yarn karma:run","test:bs:chrome":"KARMA_BROWSERS=bs_chrome_latest yarn karma:run","test:bs:firefox":"KARMA_BROWSERS=bs_firefox_latest yarn karma:run","test:bs:safari":"KARMA_BROWSERS=bs_safari_13 yarn karma:run","test:bs:edge":"KARMA_BROWSERS=bs_edge_latest yarn karma:run","test:bs:opera":"KARMA_BROWSERS=bs_opera_latest yarn karma:run","test:bs:ie":"KARMA_BROWSERS=bs_ie_11 yarn karma:run","test:bs:ios_11":"KARMA_BROWSERS=bs_ios_11 yarn karma:run","test:bs:ios_14":"KARMA_BROWSERS=bs_ios_14 yarn karma:run","test:bs:samsung":"KARMA_BROWSERS=bs_samsung yarn karma:run","prepare":"husky install"},"lint-staged":{"*.{js,ts,md}":["prettier --write"]},"peerDependencies":{"react":"16.8.0 - 18","react-dom":"16.8.0 - 18"},"devDependencies":{"@babel/core":"^7.7.7","@babel/plugin-transform-runtime":"^7.9.0","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.9.4","@babel/preset-typescript":"^7.9.0","@rollup/plugin-babel":"^5.2.1","@rollup/plugin-inject":"^4.0.1","@rollup/plugin-node-resolve":"^13.3.0","@semantic-release/changelog":"^6.0.1","@semantic-release/commit-analyzer":"^9.0.2","@semantic-release/git":"^10.0.1","@semantic-release/github":"^8.0.4","@semantic-release/npm":"^9.0.1","@semantic-release/release-notes-generator":"^10.0.3","@size-limit/preset-small-lib":"^5.0.1","@testing-library/react":"^13.1.1","@types/jest":"^28.1.1","@types/karma":"^6.3.1","@types/karma-jasmine":"^4.0.1","@types/react":"^18.0.8","@types/react-dom":"^18.0.3","@typescript-eslint/eslint-plugin":"^5.27.1","@typescript-eslint/parser":"^5.27.1","babel-loader":"^8.1.0","delay":"^5.0.0","eslint":"^8.17.0","eslint-plugin-react-hooks":"^4.5.0","husky":"^8.0.1","jest":"^28.1.1","jest-environment-jsdom":"^28.1.1","karma":"^6.3.4","karma-browserstack-launcher":"^1.6.0","karma-chrome-launcher":"^3.0.0","karma-firefox-launcher":"^2.1.1","karma-jasmine":"^4.0.0","karma-sourcemap-loader":"^0.3.7","karma-spec-reporter":"^0.0.34","karma-webpack":"^5.0.0","lint-staged":"^13.0.1","npm-run-all":"^4.1.5","prettier":"^2.0.4","react":"^18.0.0","react-app-polyfill":"^3.0.0","react-dom":"^18.0.0","rollup":"^2.6.1","semantic-release":"^19.0.3","size-limit":"^5.0.1","ts-jest":"^28.0.4","typescript":"^4.3.5","webpack":"^4.1"},"dependencies":{"@juggle/resize-observer":"^3.3.1"},"gitHead":"b5f1a536a9c759ba36562904599501247228fd83","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@9.0.2","_nodeVersion":"14.19.3","_npmVersion":"8.12.1","dist":{"integrity":"sha512-JOzsmF3/IDmtjG7OE5qXOP69LEpBpwhpLSiT1XgSr+uFRX0ftJHQnDaP7Xq+uhbljLYkJt67sqsbnyXBjiY8ig==","shasum":"25830221933d9b6e931850023305eb9d24379a6b","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-9.0.2.tgz","fileCount":11,"unpackedSize":59622,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDar7qaaZRj1dRidj0S5RPP70DBFgncZqU4wGKzugbfDwIhAOnls6sjR6EZf80JtJ5grgVNmxgAr5Uoielvc4XJfdDg"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJip6YoACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmooJQ/9HvAkTfDVp5ezC1WGaKljzm4dJUiEvq6bR3wcneUUU5eCw0qL\r\ns6Az/4Ae3tpJ8o4TMVRaNmnjnwVDTXXY97RvGfICN2ouncgGUcd8tnkYJYnm\r\nKpflKWxXPGJQcMzzNR1Oywt4/GEh6GUW3SMo/HAa2ovqj6zzrI3wY+aMbMlQ\r\n+NlORsHwuiviqv3f5nVefmeTLW+O6woK14QXFyko/8JIMuzJeW9VT5Dp/fgo\r\nIM/zp/LegFTdgGXsAFduXc04mZZwduhfiJBPaNINF1a1Xdb4EY2/tJL7Ej33\r\ngLJTWk4BKHG/6VRPgWwz/7Ka4AFFvw0dfPq4jZPH0B/k7+aymGdEEnzrGx4J\r\nkS7nV6YXofLZghPlGfX3BGgNdZdfZd+49ojHExwbGqwwBLJgYt+AyLOJPDx7\r\nZOZkoKZ25+i3+N0G0PaCLwU8UxFF0UNK7XafbhdV6qDQmsvY1oxBFlChfWHw\r\nX3Nmc8zMbS/RT/IoCBFk1WRJfpffEKGPceRXSuxz5yxIlqh838ILow9d8eap\r\nRGroIz/J2ATZpBJ3G8xZ4KKngJOGodMhG+QHvOeHSA+He/pfEMhTsc6hl3wn\r\nbhfnma1IZlam9oIR97Ze/lbVp9dX5X+givHGw7+dgBALyPjsJGz0ygdX+X1v\r\nJBEgjb3/I8Iw/4ONVfpaBJdvwRbNaaSxLY0=\r\n=tBJj\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"zeecoder","email":"contact@hubertviktor.com"},"directories":{},"maintainers":[{"name":"zeecoder","email":"contact@hubertviktor.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_9.0.2_1655154216411_0.9326517752655874"},"_hasShrinkwrap":false},"9.1.0-alpha.1":{"name":"use-resize-observer","version":"9.1.0-alpha.1","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","types":"dist/index.d.ts","sideEffects":false,"repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"contact@hubertviktor.com"},"license":"MIT","keywords":["react","hook","react hook","resize observer","resize observer hook","resize observer react hook","use-resize-observer","useresizeobserver","resize hook","size hook","container query","css in js","measure","size","resize"],"scripts":{"build":"rollup -c && tsc && rm -rf dist/utils && cp dist/index.d.ts polyfilled.d.ts","watch":"KARMA_BROWSERS=Chrome run-p 'src:watch' 'karma:watch'","src:watch":"rollup -c -w","check:size":"size-limit","check:types":"tsc -p tests","check:lint":"eslint src/**","test":"run-s 'build' 'check:size' 'check:types' 'check:lint' 'test:unit' 'test:create:ssr' 'test:headless:chrome'","test:unit":"jest","test:create:ssr":"node ./tests/ssr/create-ssr-test.js","test:chrome":"KARMA_BROWSERS=Chrome yarn karma:run","test:headless:chrome":"KARMA_BROWSERS=ChromeHeadless yarn karma:run","test:firefox":"KARMA_BROWSERS=Firefox yarn karma:run","test:headless:firefox":"KARMA_BROWSERS=FirefoxHeadless yarn karma:run","karma:run":"karma start --singleRun","karma:watch":"KARMA_BROWSERS=Chrome karma start","prepublish":"yarn build","test:bs:all":"run-s 'test:bs:modern' 'test:bs:legacy'","test:bs:modern":"KARMA_BROWSERS=modern yarn karma:run","test:bs:legacy":"KARMA_BROWSERS=legacy yarn karma:run","test:bs:chrome":"KARMA_BROWSERS=bs_chrome_latest yarn karma:run","test:bs:firefox":"KARMA_BROWSERS=bs_firefox_latest yarn karma:run","test:bs:safari":"KARMA_BROWSERS=bs_safari_13 yarn karma:run","test:bs:edge":"KARMA_BROWSERS=bs_edge_latest yarn karma:run","test:bs:opera":"KARMA_BROWSERS=bs_opera_latest yarn karma:run","test:bs:ie":"KARMA_BROWSERS=bs_ie_11 yarn karma:run","test:bs:ios_11":"KARMA_BROWSERS=bs_ios_11 yarn karma:run","test:bs:ios_14":"KARMA_BROWSERS=bs_ios_14 yarn karma:run","test:bs:samsung":"KARMA_BROWSERS=bs_samsung yarn karma:run","prepare":"husky install"},"lint-staged":{"*.{js,ts,md}":["prettier --write"]},"peerDependencies":{"react":"16.8.0 - 18","react-dom":"16.8.0 - 18"},"devDependencies":{"@babel/core":"^7.7.7","@babel/plugin-transform-runtime":"^7.9.0","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.9.4","@babel/preset-typescript":"^7.9.0","@rollup/plugin-babel":"^5.2.1","@rollup/plugin-inject":"^4.0.1","@rollup/plugin-node-resolve":"^13.3.0","@semantic-release/changelog":"^6.0.1","@semantic-release/commit-analyzer":"^9.0.2","@semantic-release/git":"^10.0.1","@semantic-release/github":"^8.0.4","@semantic-release/npm":"^9.0.1","@semantic-release/release-notes-generator":"^10.0.3","@size-limit/preset-small-lib":"^5.0.1","@testing-library/react":"^13.1.1","@types/jest":"^28.1.1","@types/karma":"^6.3.1","@types/karma-jasmine":"^4.0.1","@types/react":"^18.0.8","@types/react-dom":"^18.0.3","@typescript-eslint/eslint-plugin":"^5.27.1","@typescript-eslint/parser":"^5.27.1","babel-loader":"^8.1.0","delay":"^5.0.0","eslint":"^8.17.0","eslint-plugin-react-hooks":"^4.5.0","husky":"^8.0.1","jest":"^28.1.1","jest-environment-jsdom":"^28.1.1","karma":"^6.3.4","karma-browserstack-launcher":"^1.6.0","karma-chrome-launcher":"^3.0.0","karma-firefox-launcher":"^2.1.1","karma-jasmine":"^4.0.0","karma-sourcemap-loader":"^0.3.7","karma-spec-reporter":"^0.0.34","karma-webpack":"^5.0.0","lint-staged":"^13.0.1","npm-run-all":"^4.1.5","prettier":"^2.0.4","react":"^18.0.0","react-app-polyfill":"^3.0.0","react-dom":"^18.0.0","rollup":"^2.6.1","semantic-release":"^19.0.3","size-limit":"^5.0.1","ts-jest":"^28.0.4","typescript":"^4.3.5","webpack":"^4.1"},"dependencies":{"@juggle/resize-observer":"^3.3.1"},"readme":"# use-resize-observer\n\n\n<h1 align=\"center\">\n\t<br>\n\t<img width=\"250\" src=\"https://raw.githubusercontent.com/ZeeCoder/use-resize-observer/master/media/Logo.png\" alt=\"useResizeObserver\">\n\t<br>\n    <br>\n</h1>\n\nA React hook that allows you to use a ResizeObserver to measure an element's size.\n\n[![npm version](https://badge.fury.io/js/use-resize-observer.svg)](https://npmjs.com/package/use-resize-observer)\n[![build](https://github.com/ZeeCoder/use-resize-observer/workflows/Testing/badge.svg)](https://github.com/ZeeCoder/use-resize-observer/actions/workflows/testing.yml)\n[![BrowserStack Status](https://automate.browserstack.com/badge.svg?badge_key=aVpjV2RZbThnWnh2S0FvREh0cGRtRHRCNzYwUmw4N0Z4WUxybHM0WkpqST0tLW9RT0tDeGk3OVU2WkNtalpON29xWFE9PQ==--ec6a97c52cd7ad30417612ca3f5df511eef5d631)](https://automate.browserstack.com/public-build/aVpjV2RZbThnWnh2S0FvREh0cGRtRHRCNzYwUmw4N0Z4WUxybHM0WkpqST0tLW9RT0tDeGk3OVU2WkNtalpON29xWFE9PQ==--ec6a97c52cd7ad30417612ca3f5df511eef5d631)\n\n## Highlights\n\n- Written in **TypeScript**.\n- **Tiny**: [648B](.size-limit.json) (minified, gzipped) Monitored by [size-limit](https://github.com/ai/size-limit).\n- Exposes an **onResize callback** if you need more control.\n- `box` [option](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/observe#syntax).\n- Works with **SSR**.\n- Works with **CSS-in-JS**.\n- **Supports custom refs** in case you [had one already](#passing-in-your-own-ref).\n- **Uses RefCallback by default** To address delayed mounts and changing ref elements.\n- **Ships a polyfilled version**\n- Handles many edge cases you might not even think of.\n  (See this documentation and the test cases.)\n- Easy to compose ([Throttle / Debounce](#throttle--debounce), [Breakpoints](#breakpoints))\n- **Tested in real browsers** (Currently latest Chrome, Firefox, Edge, Safari, Opera, IE 11, iOS and Android, sponsored by BrowserStack)\n\n## In Action\n\n[CodeSandbox Demo](https://codesandbox.io/s/nrp0w2r5z0)\n\n## Install\n\n```sh\nyarn add use-resize-observer --dev\n# or\nnpm install use-resize-observer --save-dev\n```\n\n## Options\n\n| Option   | Type                                                                                 | Description                                                                                                                   | Default        |\n| -------- | ------------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------------------------------------------------- | -------------- |\n| ref      | undefined &#124; RefObject &#124; HTMLElement                                        | A ref or element to observe.                                                                                                  | undefined      |\n| box      | undefined &#124; \"border-box\" &#124; \"content-box\" &#124; \"device-pixel-content-box\" | The [box model](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/observe#syntax) to use for observation.       | \"content-box\"  |\n| onResize | undefined &#124; ({ width?: number, height?: number }) => void                       | A callback receiving the element size. If given, then the hook will not return the size, and instead will call this callback. | undefined      |\n| round    | undefined &#124; (n: number) => number                                               | A function to use for rounding values instead of the default.                                                                 | `Math.round()` |\n\n## Response\n\n| Name   | Type                    | Description                                    |\n| ------ | ----------------------- | ---------------------------------------------- |\n| ref    | RefCallback             | A callback to be passed to React's \"ref\" prop. |\n| width  | undefined &#124; number | The width (or \"blockSize\") of the element.     |\n| height | undefined &#124; number | The height (or \"inlineSize\") of the element.   |\n\n## Basic Usage\n\nNote that the default builds are not polyfilled! For instructions and alternatives,\nsee the [Transpilation / Polyfilling](#transpilation--polyfilling) section.\n\n```tsx\nimport React from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\n\nconst App = () => {\n  const { ref, width = 1, height = 1 } = useResizeObserver<HTMLDivElement>();\n\n  return (\n    <div ref={ref}>\n      Size: {width}x{height}\n    </div>\n  );\n};\n```\n\nTo observe a different box size other than content box, pass in the `box` option, like so:\n\n```tsx\nconst { ref, width, height } = useResizeObserver<HTMLDivElement>({\n  box: \"border-box\",\n});\n```\n\nNote that if the browser does not support the given box type, then the hook won't report any sizes either.\n\n### Box Options\n\nNote that box options are experimental, and as such are not supported by all browsers that implemented ResizeObservers. (See [here](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry).)\n\n`content-box` (default)\n\nSafe to use by all browsers that implemented ResizeObservers. The hook internally will fall back to `contentRect` from\nthe old spec in case `contentBoxSize` is not available.\n\n`border-box`\n\nSupported well for the most part by evergreen browsers. If you need to support older versions of these browsers however,\nthen you may want to feature-detect for support, and optionally include a polyfill instead of the native implementation.\n\n`device-pixel-content-box`\n\nSurma has a [very good article](https://web.dev/device-pixel-content-box/) on how this allows us to do pixel perfect\nrendering. At the time of writing, however this has very limited support.\nThe advices on feature detection for `border-box` apply here too.\n\n### Custom Rounding\n\nBy default this hook passes the measured values through `Math.round()`, to avoid re-rendering on every subpixel changes.\n\nIf this is not what you want, then you can provide your own function:\n\n**Rounding Down Reported Values**\n\n```tsx\nconst { ref, width, height } = useResizeObserver<HTMLDivElement>({\n  round: Math.floor,\n});\n```\n\n**Skipping Rounding**\n\n```tsx\nimport React from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\n\n// Outside the hook to ensure this instance does not change unnecessarily.\nconst noop = (n) => n;\n\nconst App = () => {\n  const {\n    ref,\n    width = 1,\n    height = 1,\n  } = useResizeObserver<HTMLDivElement>({ round: noop });\n\n  return (\n    <div ref={ref}>\n      Size: {width}x{height}\n    </div>\n  );\n};\n```\n\nNote that the round option is sensitive to the function reference, so make sure you either use `useCallback`\nor declare your rounding function outside of the hook's function scope, if it does not rely on any hook state.\n(As shown above.)\n\n### Getting the Raw Element from the Default `RefCallback`\n\nNote that \"ref\" in the above examples is a `RefCallback`, not a `RefObject`, meaning you won't be\nable to access \"ref.current\" if you need the element itself.\n\nTo get the raw element, either you use your own RefObject (see later in this doc),\nor you can merge the returned ref with one of your own:\n\n```tsx\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\nimport mergeRefs from \"react-merge-refs\";\n\nconst App = () => {\n  const { ref, width = 1, height = 1 } = useResizeObserver<HTMLDivElement>();\n\n  const mergedCallbackRef = mergeRefs([\n    ref,\n    (element: HTMLDivElement) => {\n      // Do whatever you want with the `element`.\n    },\n  ]);\n\n  return (\n    <div ref={mergedCallbackRef}>\n      Size: {width}x{height}\n    </div>\n  );\n};\n```\n\n## Passing in Your Own `ref`\n\nYou can pass in your own ref instead of using the one provided.\nThis can be useful if you already have a ref you want to measure.\n\n```ts\nconst ref = useRef<HTMLDivElement>(null);\nconst { width, height } = useResizeObserver<HTMLDivElement>({ ref });\n```\n\nYou can even reuse the same hook instance to measure different elements:\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-reusing-refs-buftd)\n\n## Measuring a raw element\n\nThere might be situations where you have an element already that you need to measure.\n`ref` now accepts elements as well, not just refs, which means that you can do this:\n\n```ts\nconst { width, height } = useResizeObserver<HTMLDivElement>({\n  ref: divElement,\n});\n```\n\n## Using a Single Hook to Measure Multiple Refs\n\nThe hook reacts to ref changes, as it resolves it to an element to observe.\nThis means that you can freely change the custom `ref` option from one ref to\nanother and back, and the hook will start observing whatever is set in its options.\n\n## Opting Out of (or Delaying) ResizeObserver Instantiation\n\nIn certain cases you might want to delay creating a ResizeObserver instance.\n\nYou might provide a library, that only optionally provides observation features\nbased on props, which means that while you have the hook within your component,\nyou might not want to actually initialise it.\n\nAnother example is that you might want to entirely opt out of initialising, when\nyou run some tests, where the environment does not provide the `ResizeObserver`.\n\n([See discussions](https://github.com/ZeeCoder/use-resize-observer/issues/40))\n\nYou can do one of the following depending on your needs:\n\n- Use the default `ref` RefCallback, or provide a custom ref conditionally,\n  only when needed. The hook will not create a ResizeObserver instance up until\n  there's something there to actually observe.\n- Patch the test environment, and make a polyfill available as the ResizeObserver.\n  (This assumes you don't already use the polyfilled version, which would switch\n  to the polyfill when no native implementation was available.)\n\n## The \"onResize\" Callback\n\nBy the default the hook will trigger a re-render on all changes to the target\nelement's width and / or height.\n\nYou can opt out of this behaviour, by providing an `onResize` callback function,\nwhich'll simply receive the width and height of the element when it changes, so\nthat you can decide what to do with it:\n\n```tsx\nimport React from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\n\nconst App = () => {\n  // width / height will not be returned here when the onResize callback is present\n  const { ref } = useResizeObserver<HTMLDivElement>({\n    onResize: ({ width, height }) => {\n      // do something here.\n    },\n  });\n\n  return <div ref={ref} />;\n};\n```\n\nThis callback also makes it possible to implement your own hooks that report only\nwhat you need, for example:\n\n- Reporting only width or height\n- Throttle / debounce\n- Wrap in `requestAnimationFrame`\n\n## Hook Composition\n\nAs this hook intends to remain low-level, it is encouraged to build on top of it via hook composition, if additional features are required.\n\n### Throttle / Debounce\n\nYou might want to receive values less frequently than changes actually occur.\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-throttle-and-debounce-8uvsg)\n\n### Breakpoints\n\nAnother popular concept are breakpoints. Here is an example for a simple hook accomplishing that.\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-breakpoints-3hiv8)\n\n## Defaults (SSR)\n\nOn initial mount the ResizeObserver will take a little time to report on the\nactual size.\n\nUntil the hook receives the first measurement, it returns `undefined` for width\nand height by default.\n\nYou can override this behaviour, which could be useful for SSR as well.\n\n```ts\nconst { ref, width = 100, height = 50 } = useResizeObserver<HTMLDivElement>();\n```\n\nHere \"width\" and \"height\" will be 100 and 50 respectively, until the\nResizeObserver kicks in and reports the actual size.\n\n## Without Defaults\n\nIf you only want real measurements (only values from the ResizeObserver without\nany default values), then you can just leave defaults off:\n\n```ts\nconst { ref, width, height } = useResizeObserver<HTMLDivElement>();\n```\n\nHere \"width\" and \"height\" will be undefined until the ResizeObserver takes its\nfirst measurement.\n\n## Container/Element Query with CSS-in-JS\n\nIt's possible to apply styles conditionally based on the width / height of an\nelement using a CSS-in-JS solution, which is the basic idea behind\ncontainer/element queries:\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-container-query-with-css-in-js-iitxl)\n\n## Transpilation / Polyfilling\n\nBy default the library provides transpiled ES5 modules in CJS / ESM module formats.\n\nPolyfilling is recommended to be done in the host app, and not within imported\nlibraries, as that way consumers have control over the exact polyfills being used.\n\nThat said, there's a [polyfilled](https://github.com/juggle/resize-observer)\nCJS module that can be used for convenience:\n\n```ts\nimport useResizeObserver from \"use-resize-observer/polyfilled\";\n```\n\nNote that using the above will use the polyfill, [even if the native ResizeObserver is available](https://github.com/juggle/resize-observer#basic-usage).\n\nTo use the polyfill as a fallback only when the native RO is unavailable, you can polyfill yourself instead,\neither in your app's entry file, or you could create a local `useResizeObserver` module, like so:\n\n```ts\n// useResizeObserver.ts\nimport { ResizeObserver } from \"@juggle/resize-observer\";\nimport useResizeObserver from \"use-resize-observer\";\n\nif (!window.ResizeObserver) {\n  window.ResizeObserver = ResizeObserver;\n}\n\nexport default useResizeObserver;\n```\n\nThe same technique can also be used to provide any of your preferred ResizeObserver polyfills out there.\n\n## Related\n\n- [@zeecoder/container-query](https://github.com/ZeeCoder/container-query)\n- [@zeecoder/react-resize-observer](https://github.com/ZeeCoder/react-resize-observer)\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"c1803f110651e3dbf0e167ba91def96f42d546db","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@9.1.0-alpha.1","_nodeVersion":"14.20.1","_npmVersion":"8.12.1","dist":{"integrity":"sha512-aXrnFswBof0HP9xdPtpm+J9cVFx/3nzzUux8NRHh6lrubqNXNzOcV7Mli7/JP8XdB82jwkbkf9wzLF1paeFl3A==","shasum":"37378b8b41e84e2f78d1c29549d43aa263beec74","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-9.1.0-alpha.1.tgz","fileCount":11,"unpackedSize":60019,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC4IQ400xNKKoBJLmv1B04rgBWUBAM4UKvoDXUb+Of+QQIhAL1/7aV8L60rlV38P+TobwTK1lI52oNwJTFM11pB852J"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJje244ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo8fg/+NHz6xhD3nDc5MU/1x7h6ylqZQLXLyKz+J4XuifdFAybFO2Bj\r\nDfetUCbEwlBeI0JCEGzQ4u0ve+WSnKQwJVBy867dTiLX0zj8b+EeJ5zhYslC\r\nP1evvP2prrfOZL4ZQzHHhQoOdPDLBEOVfje1H7i4Q5IRUJ+t0COy3eyB1rLn\r\niYrfGAZgMhJQVbP+G5CmMUOSyxQSjzGKpjElS2wx+PXKJ6+HwHRw3UQ+Puh7\r\n50ffztHrJGOEfFbs9zAh4W/XFZHbCA8fyzlA951BWpUA8ilLGAhIOkcLehei\r\naCPehAWJKNuny0sBJD5vWz9DF50RbyNSqkJS8n5v4sFjZTyME8ITydRQfvEI\r\npVkC7CZU9Swbo1VA2keeZjJ8PGVTYTXDXhurbK2avk73Uq5RdLDDd2iHzO65\r\nCflu23SZX6ljvwxf4tQ+TbLPADaXjt2/VuvFyJYN+liXA9RRtrJAQEbbSARO\r\nu+yfVMhY5vvnCnbuM0uKPsD7pH/dW7LFzyEc21U8WE+Lahu/3bJf2begTPh0\r\nMqHrfA4Jm0jBYtLTUm6+FiI0TvtUpKvQjdQPw9/nJxMZeIXxPGJBT9NzVg84\r\ndoY7l0es4UB/C12NKwz2Q4q3/7rDOCjDyeLcr7Z5jYFS5jCIoR8PSyv/+MvH\r\nNZlvp7eRoqrrajm+esFRLYzzfmh3jzviPMU=\r\n=k236\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"zeecoder","email":"contact@hubertviktor.com"},"directories":{},"maintainers":[{"name":"zeecoder","email":"contact@hubertviktor.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_9.1.0-alpha.1_1669033528375_0.87053006701968"},"_hasShrinkwrap":false},"9.1.0":{"name":"use-resize-observer","version":"9.1.0","main":"dist/bundle.cjs.js","module":"dist/bundle.esm.js","types":"dist/index.d.ts","sideEffects":false,"repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","author":{"name":"Viktor Hubert","email":"contact@hubertviktor.com"},"license":"MIT","keywords":["react","hook","react hook","resize observer","resize observer hook","resize observer react hook","use-resize-observer","useresizeobserver","resize hook","size hook","container query","css in js","measure","size","resize"],"scripts":{"build":"rollup -c && tsc && rm -rf dist/utils && cp dist/index.d.ts polyfilled.d.ts","watch":"KARMA_BROWSERS=Chrome run-p 'src:watch' 'karma:watch'","src:watch":"rollup -c -w","check:size":"size-limit","check:types":"tsc -p tests","check:lint":"eslint src/**","test":"run-s 'build' 'check:size' 'check:types' 'check:lint' 'test:unit' 'test:create:ssr' 'test:headless:chrome'","test:unit":"jest","test:create:ssr":"node ./tests/ssr/create-ssr-test.js","test:chrome":"KARMA_BROWSERS=Chrome yarn karma:run","test:headless:chrome":"KARMA_BROWSERS=ChromeHeadless yarn karma:run","test:firefox":"KARMA_BROWSERS=Firefox yarn karma:run","test:headless:firefox":"KARMA_BROWSERS=FirefoxHeadless yarn karma:run","karma:run":"karma start --singleRun","karma:watch":"KARMA_BROWSERS=Chrome karma start","prepublish":"yarn build","test:bs:all":"run-s 'test:bs:modern' 'test:bs:legacy'","test:bs:modern":"KARMA_BROWSERS=modern yarn karma:run","test:bs:legacy":"KARMA_BROWSERS=legacy yarn karma:run","test:bs:chrome":"KARMA_BROWSERS=bs_chrome_latest yarn karma:run","test:bs:firefox":"KARMA_BROWSERS=bs_firefox_latest yarn karma:run","test:bs:safari":"KARMA_BROWSERS=bs_safari_13 yarn karma:run","test:bs:edge":"KARMA_BROWSERS=bs_edge_latest yarn karma:run","test:bs:opera":"KARMA_BROWSERS=bs_opera_latest yarn karma:run","test:bs:ie":"KARMA_BROWSERS=bs_ie_11 yarn karma:run","test:bs:ios_11":"KARMA_BROWSERS=bs_ios_11 yarn karma:run","test:bs:ios_14":"KARMA_BROWSERS=bs_ios_14 yarn karma:run","test:bs:samsung":"KARMA_BROWSERS=bs_samsung yarn karma:run","prepare":"husky install"},"lint-staged":{"*.{js,ts,md}":["prettier --write"]},"peerDependencies":{"react":"16.8.0 - 18","react-dom":"16.8.0 - 18"},"devDependencies":{"@babel/core":"^7.7.7","@babel/plugin-transform-runtime":"^7.9.0","@babel/preset-env":"^7.7.7","@babel/preset-react":"^7.9.4","@babel/preset-typescript":"^7.9.0","@rollup/plugin-babel":"^5.2.1","@rollup/plugin-inject":"^4.0.1","@rollup/plugin-node-resolve":"^13.3.0","@semantic-release/changelog":"^6.0.1","@semantic-release/commit-analyzer":"^9.0.2","@semantic-release/git":"^10.0.1","@semantic-release/github":"^8.0.4","@semantic-release/npm":"^9.0.1","@semantic-release/release-notes-generator":"^10.0.3","@size-limit/preset-small-lib":"^5.0.1","@testing-library/react":"^13.1.1","@types/jest":"^28.1.1","@types/karma":"^6.3.1","@types/karma-jasmine":"^4.0.1","@types/react":"^18.0.8","@types/react-dom":"^18.0.3","@typescript-eslint/eslint-plugin":"^5.27.1","@typescript-eslint/parser":"^5.27.1","babel-loader":"^8.1.0","delay":"^5.0.0","eslint":"^8.17.0","eslint-plugin-react-hooks":"^4.5.0","husky":"^8.0.1","jest":"^28.1.1","jest-environment-jsdom":"^28.1.1","karma":"^6.3.4","karma-browserstack-launcher":"^1.6.0","karma-chrome-launcher":"^3.0.0","karma-firefox-launcher":"^2.1.1","karma-jasmine":"^4.0.0","karma-sourcemap-loader":"^0.3.7","karma-spec-reporter":"^0.0.34","karma-webpack":"^5.0.0","lint-staged":"^13.0.1","npm-run-all":"^4.1.5","prettier":"^2.0.4","react":"^18.0.0","react-app-polyfill":"^3.0.0","react-dom":"^18.0.0","rollup":"^2.6.1","semantic-release":"^19.0.3","size-limit":"^5.0.1","ts-jest":"^28.0.4","typescript":"^4.3.5","webpack":"^4.1"},"dependencies":{"@juggle/resize-observer":"^3.3.1"},"gitHead":"12b662f8f2db276f019456ff96cfac39334adb60","bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","_id":"use-resize-observer@9.1.0","_nodeVersion":"14.20.1","_npmVersion":"8.12.1","dist":{"integrity":"sha512-R25VqO9Wb3asSD4eqtcxk8sJalvIOYBqS8MNZlpDSQ4l4xMQxC/J7Id9HoTqPq8FwULIn0PVW+OAqF2dyYbjow==","shasum":"14735235cf3268569c1ea468f8a90c5789fc5c6c","tarball":"https://registry.npmjs.org/use-resize-observer/-/use-resize-observer-9.1.0.tgz","fileCount":11,"unpackedSize":60473,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICtgsUdDeXyY1pVezT3Wab/tCs6RkZMs/Lfok81o0FVGAiEAlHmZl/rAvChWD6aS2Kbvea62YXMANL7w6pHJLRDqq9A="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjfTE4ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmquxBAAn7iIDEwmWdRx5OS4UetsyIvEK2YpUtirr3oBJqHh0LGOOcHQ\r\nBmWBD8V2lOTLyNuhH++3WQMA2yTtBJGD/YsmLZyV2QZgYkGKSiQjo8L22LOH\r\nJoEzm6RKG7UJP6yy5te1/3Sn0PI8ZXZSyxSrxHCMaEw8hRaIWlUrJivIl5Lr\r\nyT3JEOm/HJ3lotODU3IPHhmh1YE36WeP6qTvdIK9KaPz5fCxhi1ekOJip8iB\r\ntpHEnRWAYH0Dg83tDNkyuVepkwIcgZK9Vw57FSq9fRhRPAhACVK02WUcenE2\r\nkEc1Ak9a+zRmuTC8o1vEysWXBgAPJgriF5mF470QL7km+706K649hued0Tgf\r\nUuEPUYRZGCH0qpQjROasOwZryZ7lpGV6GuD2C7bpWzqRw/ted4Od8mcdCcF5\r\n9t6bdkl0ReiGiI/Z1dEt8NjoD2ASw7SguFlNWgUQnajjZmaHtgvuvixyP/LJ\r\nzQZJWQza10jHl80SUEoJpsPC4PIbKMPr7gNncFg3iaDzpnSLISLmTqHbD+Ib\r\nAUv0J3g8YWtb6nIgidmLSX4+1BCChDqXS/wkIkR/tCe/Y+sF523y82rA/mZx\r\nPMqILDcPe2yUK1zDoLy5cYijFcqdsLnQ1E8ZoQ9qKAxDNyxTTFvaiYougd4w\r\nw2S2b3+KRdr2bnE74EvUMZhIA+Q+cP44E7A=\r\n=8OjC\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"zeecoder","email":"contact@hubertviktor.com"},"directories":{},"maintainers":[{"name":"zeecoder","email":"contact@hubertviktor.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/use-resize-observer_9.1.0_1669148983858_0.8210722477464012"},"_hasShrinkwrap":false}},"time":{"created":"2018-10-28T12:49:58.973Z","1.0.0":"2018-10-28T12:49:59.161Z","modified":"2022-11-22T20:29:44.085Z","2.0.0":"2018-12-20T15:28:19.406Z","2.0.1":"2018-12-20T15:33:56.128Z","3.0.0":"2019-02-07T17:46:38.265Z","3.1.0":"2019-02-11T12:27:38.870Z","4.0.0":"2019-07-20T20:11:13.885Z","5.0.0":"2019-11-18T22:11:58.799Z","6.0.0":"2019-12-29T17:36:51.378Z","6.1.0-alpha.1":"2020-04-16T15:05:00.792Z","6.1.0-alpha.2":"2020-04-20T18:35:46.490Z","6.1.0-alpha.3":"2020-04-25T21:59:24.533Z","6.1.0":"2020-05-24T16:15:35.137Z","6.2.0-alpha.1":"2020-10-11T12:36:10.894Z","7.0.0-alpha.1":"2020-10-31T13:51:40.523Z","7.0.0-alpha.3":"2020-11-11T19:38:40.704Z","7.0.0-alpha.4":"2020-11-11T20:41:39.921Z","7.0.0":"2020-11-11T20:57:49.764Z","7.0.1":"2021-07-27T21:30:58.932Z","7.1.0":"2021-08-28T19:01:45.800Z","8.0.0":"2021-08-28T21:18:31.526Z","9.0.0":"2022-05-15T22:18:05.880Z","9.0.2":"2022-06-13T21:03:36.574Z","9.1.0-alpha.1":"2022-11-21T12:25:28.569Z","9.1.0":"2022-11-22T20:29:44.004Z"},"maintainers":[{"name":"zeecoder","email":"contact@hubertviktor.com"}],"description":"A React hook that allows you to use a ResizeObserver to measure an element's size.","homepage":"https://github.com/ZeeCoder/use-resize-observer#readme","repository":{"type":"git","url":"git+ssh://git@github.com/ZeeCoder/use-resize-observer.git"},"author":{"name":"Viktor Hubert","email":"contact@hubertviktor.com"},"bugs":{"url":"https://github.com/ZeeCoder/use-resize-observer/issues"},"license":"MIT","readme":"# use-resize-observer\n\n\n<h1 align=\"center\">\n\t<br>\n\t<img width=\"250\" src=\"https://raw.githubusercontent.com/ZeeCoder/use-resize-observer/master/media/Logo.png\" alt=\"useResizeObserver\">\n\t<br>\n    <br>\n</h1>\n\nA React hook that allows you to use a ResizeObserver to measure an element's size.\n\n[![npm version](https://badge.fury.io/js/use-resize-observer.svg)](https://npmjs.com/package/use-resize-observer)\n[![build](https://github.com/ZeeCoder/use-resize-observer/workflows/Testing/badge.svg)](https://github.com/ZeeCoder/use-resize-observer/actions/workflows/testing.yml)\n[![BrowserStack Status](https://automate.browserstack.com/badge.svg?badge_key=aVpjV2RZbThnWnh2S0FvREh0cGRtRHRCNzYwUmw4N0Z4WUxybHM0WkpqST0tLW9RT0tDeGk3OVU2WkNtalpON29xWFE9PQ==--ec6a97c52cd7ad30417612ca3f5df511eef5d631)](https://automate.browserstack.com/public-build/aVpjV2RZbThnWnh2S0FvREh0cGRtRHRCNzYwUmw4N0Z4WUxybHM0WkpqST0tLW9RT0tDeGk3OVU2WkNtalpON29xWFE9PQ==--ec6a97c52cd7ad30417612ca3f5df511eef5d631)\n\n## Highlights\n\n- Written in **TypeScript**.\n- **Tiny**: [648B](.size-limit.json) (minified, gzipped) Monitored by [size-limit](https://github.com/ai/size-limit).\n- Exposes an **onResize callback** if you need more control.\n- `box` [option](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/observe#syntax).\n- Works with **SSR**.\n- Works with **CSS-in-JS**.\n- **Supports custom refs** in case you [had one already](#passing-in-your-own-ref).\n- **Uses RefCallback by default** To address delayed mounts and changing ref elements.\n- **Ships a polyfilled version**\n- Handles many edge cases you might not even think of.\n  (See this documentation and the test cases.)\n- Easy to compose ([Throttle / Debounce](#throttle--debounce), [Breakpoints](#breakpoints))\n- **Tested in real browsers** (Currently latest Chrome, Firefox, Edge, Safari, Opera, IE 11, iOS and Android, sponsored by BrowserStack)\n\n## In Action\n\n[CodeSandbox Demo](https://codesandbox.io/s/nrp0w2r5z0)\n\n## Install\n\n```sh\nyarn add use-resize-observer --dev\n# or\nnpm install use-resize-observer --save-dev\n```\n\n## Options\n\n| Option   | Type                                                                                 | Description                                                                                                                   | Default        |\n| -------- | ------------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------------------------------------------------- | -------------- |\n| ref      | undefined &#124; RefObject &#124; HTMLElement                                        | A ref or element to observe.                                                                                                  | undefined      |\n| box      | undefined &#124; \"border-box\" &#124; \"content-box\" &#124; \"device-pixel-content-box\" | The [box model](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/observe#syntax) to use for observation.       | \"content-box\"  |\n| onResize | undefined &#124; ({ width?: number, height?: number }) => void                       | A callback receiving the element size. If given, then the hook will not return the size, and instead will call this callback. | undefined      |\n| round    | undefined &#124; (n: number) => number                                               | A function to use for rounding values instead of the default.                                                                 | `Math.round()` |\n\n## Response\n\n| Name   | Type                    | Description                                    |\n| ------ | ----------------------- | ---------------------------------------------- |\n| ref    | RefCallback             | A callback to be passed to React's \"ref\" prop. |\n| width  | undefined &#124; number | The width (or \"blockSize\") of the element.     |\n| height | undefined &#124; number | The height (or \"inlineSize\") of the element.   |\n\n## Basic Usage\n\nNote that the default builds are not polyfilled! For instructions and alternatives,\nsee the [Transpilation / Polyfilling](#transpilation--polyfilling) section.\n\n```tsx\nimport React from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\n\nconst App = () => {\n  const { ref, width = 1, height = 1 } = useResizeObserver<HTMLDivElement>();\n\n  return (\n    <div ref={ref}>\n      Size: {width}x{height}\n    </div>\n  );\n};\n```\n\nTo observe a different box size other than content box, pass in the `box` option, like so:\n\n```tsx\nconst { ref, width, height } = useResizeObserver<HTMLDivElement>({\n  box: \"border-box\",\n});\n```\n\nNote that if the browser does not support the given box type, then the hook won't report any sizes either.\n\n### Box Options\n\nNote that box options are experimental, and as such are not supported by all browsers that implemented ResizeObservers. (See [here](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry).)\n\n`content-box` (default)\n\nSafe to use by all browsers that implemented ResizeObservers. The hook internally will fall back to `contentRect` from\nthe old spec in case `contentBoxSize` is not available.\n\n`border-box`\n\nSupported well for the most part by evergreen browsers. If you need to support older versions of these browsers however,\nthen you may want to feature-detect for support, and optionally include a polyfill instead of the native implementation.\n\n`device-pixel-content-box`\n\nSurma has a [very good article](https://web.dev/device-pixel-content-box/) on how this allows us to do pixel perfect\nrendering. At the time of writing, however this has very limited support.\nThe advices on feature detection for `border-box` apply here too.\n\n### Custom Rounding\n\nBy default this hook passes the measured values through `Math.round()`, to avoid re-rendering on every subpixel changes.\n\nIf this is not what you want, then you can provide your own function:\n\n**Rounding Down Reported Values**\n\n```tsx\nconst { ref, width, height } = useResizeObserver<HTMLDivElement>({\n  round: Math.floor,\n});\n```\n\n**Skipping Rounding**\n\n```tsx\nimport React from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\n\n// Outside the hook to ensure this instance does not change unnecessarily.\nconst noop = (n) => n;\n\nconst App = () => {\n  const {\n    ref,\n    width = 1,\n    height = 1,\n  } = useResizeObserver<HTMLDivElement>({ round: noop });\n\n  return (\n    <div ref={ref}>\n      Size: {width}x{height}\n    </div>\n  );\n};\n```\n\nNote that the round option is sensitive to the function reference, so make sure you either use `useCallback`\nor declare your rounding function outside of the hook's function scope, if it does not rely on any hook state.\n(As shown above.)\n\n### Getting the Raw Element from the Default `RefCallback`\n\nNote that \"ref\" in the above examples is a `RefCallback`, not a `RefObject`, meaning you won't be\nable to access \"ref.current\" if you need the element itself.\n\nTo get the raw element, either you use your own RefObject (see later in this doc),\nor you can merge the returned ref with one of your own:\n\n```tsx\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\nimport mergeRefs from \"react-merge-refs\";\n\nconst App = () => {\n  const { ref, width = 1, height = 1 } = useResizeObserver<HTMLDivElement>();\n\n  const mergedCallbackRef = mergeRefs([\n    ref,\n    (element: HTMLDivElement) => {\n      // Do whatever you want with the `element`.\n    },\n  ]);\n\n  return (\n    <div ref={mergedCallbackRef}>\n      Size: {width}x{height}\n    </div>\n  );\n};\n```\n\n## Passing in Your Own `ref`\n\nYou can pass in your own ref instead of using the one provided.\nThis can be useful if you already have a ref you want to measure.\n\n```ts\nconst ref = useRef<HTMLDivElement>(null);\nconst { width, height } = useResizeObserver<HTMLDivElement>({ ref });\n```\n\nYou can even reuse the same hook instance to measure different elements:\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-reusing-refs-buftd)\n\n## Measuring a raw element\n\nThere might be situations where you have an element already that you need to measure.\n`ref` now accepts elements as well, not just refs, which means that you can do this:\n\n```ts\nconst { width, height } = useResizeObserver<HTMLDivElement>({\n  ref: divElement,\n});\n```\n\n## Using a Single Hook to Measure Multiple Refs\n\nThe hook reacts to ref changes, as it resolves it to an element to observe.\nThis means that you can freely change the custom `ref` option from one ref to\nanother and back, and the hook will start observing whatever is set in its options.\n\n## Opting Out of (or Delaying) ResizeObserver Instantiation\n\nIn certain cases you might want to delay creating a ResizeObserver instance.\n\nYou might provide a library, that only optionally provides observation features\nbased on props, which means that while you have the hook within your component,\nyou might not want to actually initialise it.\n\nAnother example is that you might want to entirely opt out of initialising, when\nyou run some tests, where the environment does not provide the `ResizeObserver`.\n\n([See discussions](https://github.com/ZeeCoder/use-resize-observer/issues/40))\n\nYou can do one of the following depending on your needs:\n\n- Use the default `ref` RefCallback, or provide a custom ref conditionally,\n  only when needed. The hook will not create a ResizeObserver instance up until\n  there's something there to actually observe.\n- Patch the test environment, and make a polyfill available as the ResizeObserver.\n  (This assumes you don't already use the polyfilled version, which would switch\n  to the polyfill when no native implementation was available.)\n\n## The \"onResize\" Callback\n\nBy the default the hook will trigger a re-render on all changes to the target\nelement's width and / or height.\n\nYou can opt out of this behaviour, by providing an `onResize` callback function,\nwhich'll simply receive the width and height of the element when it changes, so\nthat you can decide what to do with it:\n\n```tsx\nimport React from \"react\";\nimport useResizeObserver from \"use-resize-observer\";\n\nconst App = () => {\n  // width / height will not be returned here when the onResize callback is present\n  const { ref } = useResizeObserver<HTMLDivElement>({\n    onResize: ({ width, height }) => {\n      // do something here.\n    },\n  });\n\n  return <div ref={ref} />;\n};\n```\n\nThis callback also makes it possible to implement your own hooks that report only\nwhat you need, for example:\n\n- Reporting only width or height\n- Throttle / debounce\n- Wrap in `requestAnimationFrame`\n\n## Hook Composition\n\nAs this hook intends to remain low-level, it is encouraged to build on top of it via hook composition, if additional features are required.\n\n### Throttle / Debounce\n\nYou might want to receive values less frequently than changes actually occur.\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-throttle-and-debounce-8uvsg)\n\n### Breakpoints\n\nAnother popular concept are breakpoints. Here is an example for a simple hook accomplishing that.\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-breakpoints-3hiv8)\n\n## Defaults (SSR)\n\nOn initial mount the ResizeObserver will take a little time to report on the\nactual size.\n\nUntil the hook receives the first measurement, it returns `undefined` for width\nand height by default.\n\nYou can override this behaviour, which could be useful for SSR as well.\n\n```ts\nconst { ref, width = 100, height = 50 } = useResizeObserver<HTMLDivElement>();\n```\n\nHere \"width\" and \"height\" will be 100 and 50 respectively, until the\nResizeObserver kicks in and reports the actual size.\n\n## Without Defaults\n\nIf you only want real measurements (only values from the ResizeObserver without\nany default values), then you can just leave defaults off:\n\n```ts\nconst { ref, width, height } = useResizeObserver<HTMLDivElement>();\n```\n\nHere \"width\" and \"height\" will be undefined until the ResizeObserver takes its\nfirst measurement.\n\n## Container/Element Query with CSS-in-JS\n\nIt's possible to apply styles conditionally based on the width / height of an\nelement using a CSS-in-JS solution, which is the basic idea behind\ncontainer/element queries:\n\n[CodeSandbox Demo](https://codesandbox.io/s/use-resize-observer-container-query-with-css-in-js-iitxl)\n\n## Transpilation / Polyfilling\n\nBy default the library provides transpiled ES5 modules in CJS / ESM module formats.\n\nPolyfilling is recommended to be done in the host app, and not within imported\nlibraries, as that way consumers have control over the exact polyfills being used.\n\nThat said, there's a [polyfilled](https://github.com/juggle/resize-observer)\nCJS module that can be used for convenience:\n\n```ts\nimport useResizeObserver from \"use-resize-observer/polyfilled\";\n```\n\nNote that using the above will use the polyfill, [even if the native ResizeObserver is available](https://github.com/juggle/resize-observer#basic-usage).\n\nTo use the polyfill as a fallback only when the native RO is unavailable, you can polyfill yourself instead,\neither in your app's entry file, or you could create a local `useResizeObserver` module, like so:\n\n```ts\n// useResizeObserver.ts\nimport { ResizeObserver } from \"@juggle/resize-observer\";\nimport useResizeObserver from \"use-resize-observer\";\n\nif (!window.ResizeObserver) {\n  window.ResizeObserver = ResizeObserver;\n}\n\nexport default useResizeObserver;\n```\n\nThe same technique can also be used to provide any of your preferred ResizeObserver polyfills out there.\n\n## Related\n\n- [@zeecoder/container-query](https://github.com/ZeeCoder/container-query)\n- [@zeecoder/react-resize-observer](https://github.com/ZeeCoder/react-resize-observer)\n\n## License\n\nMIT\n","readmeFilename":"README.md","keywords":["react","hook","react hook","resize observer","resize observer hook","resize observer react hook","use-resize-observer","useresizeobserver","resize hook","size hook","container query","css in js","measure","size","resize"]}